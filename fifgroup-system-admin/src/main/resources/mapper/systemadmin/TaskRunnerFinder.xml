<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="co.id.fifgroup.systemadmin.finder.TaskRunnerFinder">
	<resultMap id="BaseResultMap" type="co.id.fifgroup.systemadmin.dto.TaskRunnerDTO">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Feb 27 
			20:51:34 ICT 2013. -->
		<id column="TASK_RUNNER_ID" property="id" jdbcType="DECIMAL" />
		<result column="TASK_RUNNER_NAME" property="taskRunnerName"
			jdbcType="VARCHAR" />
		<result column="DESCRIPTION" property="description" jdbcType="VARCHAR" />
		<result column="EXECUTION_TYPE" property="executionType"
			jdbcType="DECIMAL" />
		<result column="TASK_COUNT" property="taskCount" jdbcType="NUMERIC" />
		<result column="DATE_FROM" property="dateFrom" jdbcType="DATE" />
		<result column="DATE_TO" property="dateTo" jdbcType="DATE" />
		<result column="CREATED_BY" property="createdBy" jdbcType="DECIMAL" />
		<result column="CREATION_DATE" property="creationDate"
			jdbcType="TIMESTAMP" />
		<result column="LAST_UPDATED_BY" property="lastUpdatedBy"
			jdbcType="DECIMAL" />
		<result column="LAST_UPDATE_DATE" property="lastUpdateDate"
			jdbcType="TIMESTAMP" />
		<result column="USER_NAME" property="userName" jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="co.id.fifgroup.systemadmin.domain.TaskRunner">
		SELECT DISTINCT
		HD.TASK_RUNNER_ID,
		HD.TASK_RUNNER_NAME,
		HD.DESCRIPTION,
		(SELECT
		COUNT(*) FROM
		SAM_TASK_RUNNER_DTL WHERE
		TASK_RUNNER_HDR_ID =
		HD.TASK_RUNNER_ID) AS TASK_COUNT,
		HD.CREATED_BY,
		HD.CREATION_DATE,
		HD.LAST_UPDATE_DATE,
		HD.LAST_UPDATED_BY,
		U.USER_NAME
		FROM
		SAM_TASK_RUNNER_HDR HD
		LEFT JOIN SAM_USERS U ON U.USER_ID =
		HD.LAST_UPDATED_BY
		LEFT JOIN SAM_TASK_GROUP_DTL TGD ON TGD.TASK_RUNNER_ID =
		HD.TASK_RUNNER_Id
		<where>
			<if test="example.taskRunnerName != null">
				UPPER(HD.TASK_RUNNER_NAME) LIKE
				(UPPER(#{example.taskRunnerName,jdbcType=VARCHAR}))
			</if>
			<if test="taskGroupId != null">
				AND TGD.TASK_GROUP_ID = #{taskGroupId,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY
		HD.TASK_RUNNER_NAME, HD.LAST_UPDATE_DATE ASC
	</select>

	<select id="countByExample" resultType="int"
		parameterType="co.id.fifgroup.systemadmin.domain.TaskRunner">
		SELECT count(*)
		FROM SAM_TASK_RUNNER_HDR HD
		LEFT JOIN SAM_USERS U ON U.USER_ID = HD.LAST_UPDATED_BY
		JOIN SAM_TASK_GROUP_DTL TGD ON
		TGD.TASK_RUNNER_ID = HD.TASK_RUNNER_Id
		<where>
			<if test="example.taskRunnerName != null">
				UPPER(HD.TASK_RUNNER_NAME) LIKE
				(UPPER(#{example.taskRunnerName,jdbcType=VARCHAR}))
			</if>
			<if test="taskGroupId != null">
				AND TGD.TASK_GROUP_ID = #{taskGroupId,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY HD.LAST_UPDATE_DATE DESC
	</select>

	<resultMap id="DetailMap"
		type="co.id.fifgroup.systemadmin.dto.TaskRunnerDetailDTO">
		<id column="TASK_RUNNER_DTL_ID" property="taskRunnerDetail.id"
			jdbcType="DECIMAL" />
		<result column="TASK_RUNNER_HDR_ID" property="taskRunnerDetail.taskRunnerHdrId"
			jdbcType="DECIMAL" />
		<result column="SEQUENCE" property="taskRunnerDetail.sequence"
			jdbcType="DECIMAL" />
		<result column="TASK_ID" property="taskRunnerDetail.taskId"
			jdbcType="DECIMAL" />
		<result column="main_task" property="mainTask.taskName"
			jdbcType="VARCHAR" />
		<result column="description" property="mainTask.description"
			jdbcType="VARCHAR" />
		<result column="m_class_name" property="mainTask.className"
			jdbcType="VARCHAR" />
		<result column="m_task_type" property="mainTask.taskType"
			jdbcType="VARCHAR" />
		<result column="m_print" property="mainTask.printAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="m_save" property="mainTask.saveAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="m_format" property="mainTask.outputFormat"
			jdbcType="VARCHAR" />
		<result column="SCCUESS_TASK_ID" property="taskRunnerDetail.sccuessTaskId"
			jdbcType="DECIMAL" />
		<result column="success_task" property="successTask.taskName"
			jdbcType="VARCHAR" />
		<result column="s_class_name" property="successTask.className"
			jdbcType="VARCHAR" />
		<result column="s_task_type" property="successTask.taskType"
			jdbcType="VARCHAR" />
		<result column="s_print" property="successTask.printAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="s_save" property="successTask.saveAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="s_format" property="successTask.outputFormat"
			jdbcType="VARCHAR" />
		<result column="ERROR_TASK_ID" property="taskRunnerDetail.errorTaskId"
			jdbcType="DECIMAL" />
		<result column="error_task" property="errorTask.taskName"
			jdbcType="VARCHAR" />
		<result column="e_class_name" property="errorTask.className"
			jdbcType="VARCHAR" />
		<result column="e_task_type" property="errorTask.taskType"
			jdbcType="VARCHAR" />
		<result column="e_print" property="errorTask.printAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="e_save" property="errorTask.saveAfterCompleted"
			jdbcType="NUMERIC" />
		<result column="e_format" property="errorTask.outputFormat"
			jdbcType="VARCHAR" />
	</resultMap>

	<select id="selectDetailByHeaderId" resultMap="DetailMap"
		parameterType="java.lang.Long">
		select
		dt.task_runner_dtl_id,
		dt.task_runner_hdr_id,
		dt.sequence,
		dt.task_id,
		ts.task_name main_task,
		ts.description,
		ts.class_name m_class_name,
		ts.task_type m_task_type,
		ts.print_after_completed m_print,
		ts.save_after_completed m_save,
		ts.output_format m_format,
		dt.sccuess_task_id,
		tk.task_name
		success_task,
		tk.class_name s_class_name,
		tk.task_type s_task_type,
		tk.print_after_completed s_print,
		tk.save_after_completed s_save,
		tk.output_format s_format,
		dt.error_task_id,
		tt.task_name error_task,
		tt.class_name e_class_name,
		tt.task_type e_task_type,
		tt.print_after_completed e_print,
		tt.save_after_completed e_save,
		tt.output_format e_format
		from sam_task_runner_dtl dt left join
		sam_tasks ts on ts.task_id =
		dt.task_id
		left join sam_tasks tk on
		tk.task_id = dt.sccuess_task_id
		left join sam_tasks tt on tt.task_id =
		dt.error_task_id
		where dt.task_runner_hdr_id = #{id, jdbcType=NUMERIC}
		order by sequence asc
	</select>
	
	<select id="selectBatchByExample" resultMap="BaseResultMap"
		parameterType="co.id.fifgroup.systemadmin.domain.TaskRunner">
		SELECT DISTINCT
		HD.TASK_RUNNER_ID,
		HD.TASK_RUNNER_NAME,
		HD.DESCRIPTION,
		(SELECT
		COUNT(*) FROM
		SAM_TASK_RUNNER_DTL WHERE
		TASK_RUNNER_HDR_ID =
		HD.TASK_RUNNER_ID) AS TASK_COUNT,
		HD.CREATED_BY,
		HD.CREATION_DATE,
		HD.LAST_UPDATE_DATE,
		HD.LAST_UPDATED_BY,
    	U.USER_NAME
		FROM SAM_TASK_RUNNER_HDR HD
		JOIN SAM_TASK_RUNNER_DTL DT ON HD.TASK_RUNNER_ID = DT.TASK_RUNNER_HDR_ID
		JOIN SAM_TASKS ST ON DT.TASK_ID = ST.TASK_ID AND ST.TASK_TYPE = 'BATCH'
		LEFT JOIN SAM_TASK_GROUP_DTL TGD ON TGD.TASK_RUNNER_ID =
		HD.TASK_RUNNER_ID
		LEFT JOIN SAM_USERS U ON U.USER_ID =
		HD.LAST_UPDATED_BY
		<where>
			<if test="example.taskRunnerName != null">
				UPPER(HD.TASK_RUNNER_NAME) LIKE
				(UPPER(#{example.taskRunnerName,jdbcType=VARCHAR}))
			</if>
			<if test="taskGroupId != null">
				AND TGD.TASK_GROUP_ID = #{taskGroupId,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY
		HD.TASK_RUNNER_NAME, HD.LAST_UPDATE_DATE ASC
	</select>
	
	<select id="countBatchByExample" resultType="int"
		parameterType="co.id.fifgroup.systemadmin.domain.TaskRunner">
		SELECT count(*)
		FROM SAM_TASK_RUNNER_HDR HD
		JOIN SAM_TASK_RUNNER_DTL DT ON HD.TASK_RUNNER_ID = DT.TASK_RUNNER_HDR_ID
		JOIN SAM_TASKS ST ON DT.TASK_ID = ST.TASK_ID AND ST.TASK_TYPE = 'BATCH'
		LEFT JOIN SAM_TASK_GROUP_DTL TGD ON TGD.TASK_RUNNER_ID =
		HD.TASK_RUNNER_ID
		LEFT JOIN SAM_USERS U ON U.USER_ID =
		HD.LAST_UPDATED_BY
		<where>
			<if test="example.taskRunnerName != null">
				UPPER(HD.TASK_RUNNER_NAME) LIKE
				(UPPER(#{example.taskRunnerName,jdbcType=VARCHAR}))
			</if>
			<if test="taskGroupId != null">
				AND TGD.TASK_GROUP_ID = #{taskGroupId,jdbcType=VARCHAR}
			</if>
		</where>
		ORDER BY HD.LAST_UPDATE_DATE DESC
	</select>

</mapper>