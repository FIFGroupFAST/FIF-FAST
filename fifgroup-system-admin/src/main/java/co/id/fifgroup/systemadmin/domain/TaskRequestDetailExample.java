package co.id.fifgroup.systemadmin.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class TaskRequestDetailExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public TaskRequestDetailExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("REQUEST_DETAIL_ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("REQUEST_DETAIL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("REQUEST_DETAIL_ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("REQUEST_DETAIL_ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("REQUEST_DETAIL_ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("REQUEST_DETAIL_ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("REQUEST_DETAIL_ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("REQUEST_DETAIL_ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("REQUEST_DETAIL_ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("REQUEST_DETAIL_ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("REQUEST_DETAIL_ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("REQUEST_DETAIL_ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdIsNull() {
            addCriterion("TASK_REQUEST_ID is null");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdIsNotNull() {
            addCriterion("TASK_REQUEST_ID is not null");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdEqualTo(Long value) {
            addCriterion("TASK_REQUEST_ID =", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdNotEqualTo(Long value) {
            addCriterion("TASK_REQUEST_ID <>", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdGreaterThan(Long value) {
            addCriterion("TASK_REQUEST_ID >", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdGreaterThanOrEqualTo(Long value) {
            addCriterion("TASK_REQUEST_ID >=", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdLessThan(Long value) {
            addCriterion("TASK_REQUEST_ID <", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdLessThanOrEqualTo(Long value) {
            addCriterion("TASK_REQUEST_ID <=", value, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdIn(List<Long> values) {
            addCriterion("TASK_REQUEST_ID in", values, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdNotIn(List<Long> values) {
            addCriterion("TASK_REQUEST_ID not in", values, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdBetween(Long value1, Long value2) {
            addCriterion("TASK_REQUEST_ID between", value1, value2, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andTaskRequestIdNotBetween(Long value1, Long value2) {
            addCriterion("TASK_REQUEST_ID not between", value1, value2, "taskRequestId");
            return (Criteria) this;
        }

        public Criteria andDateStartedIsNull() {
            addCriterion("DATE_STARTED is null");
            return (Criteria) this;
        }

        public Criteria andDateStartedIsNotNull() {
            addCriterion("DATE_STARTED is not null");
            return (Criteria) this;
        }

        public Criteria andDateStartedEqualTo(Date value) {
            addCriterion("DATE_STARTED =", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedNotEqualTo(Date value) {
            addCriterion("DATE_STARTED <>", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedGreaterThan(Date value) {
            addCriterion("DATE_STARTED >", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedGreaterThanOrEqualTo(Date value) {
            addCriterion("DATE_STARTED >=", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedLessThan(Date value) {
            addCriterion("DATE_STARTED <", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedLessThanOrEqualTo(Date value) {
            addCriterion("DATE_STARTED <=", value, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedIn(List<Date> values) {
            addCriterion("DATE_STARTED in", values, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedNotIn(List<Date> values) {
            addCriterion("DATE_STARTED not in", values, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedBetween(Date value1, Date value2) {
            addCriterion("DATE_STARTED between", value1, value2, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateStartedNotBetween(Date value1, Date value2) {
            addCriterion("DATE_STARTED not between", value1, value2, "dateStarted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedIsNull() {
            addCriterion("DATE_COMPLETED is null");
            return (Criteria) this;
        }

        public Criteria andDateCompletedIsNotNull() {
            addCriterion("DATE_COMPLETED is not null");
            return (Criteria) this;
        }

        public Criteria andDateCompletedEqualTo(Date value) {
            addCriterion("DATE_COMPLETED =", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedNotEqualTo(Date value) {
            addCriterion("DATE_COMPLETED <>", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedGreaterThan(Date value) {
            addCriterion("DATE_COMPLETED >", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedGreaterThanOrEqualTo(Date value) {
            addCriterion("DATE_COMPLETED >=", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedLessThan(Date value) {
            addCriterion("DATE_COMPLETED <", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedLessThanOrEqualTo(Date value) {
            addCriterion("DATE_COMPLETED <=", value, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedIn(List<Date> values) {
            addCriterion("DATE_COMPLETED in", values, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedNotIn(List<Date> values) {
            addCriterion("DATE_COMPLETED not in", values, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedBetween(Date value1, Date value2) {
            addCriterion("DATE_COMPLETED between", value1, value2, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andDateCompletedNotBetween(Date value1, Date value2) {
            addCriterion("DATE_COMPLETED not between", value1, value2, "dateCompleted");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIsNull() {
            addCriterion("TASK_STATUS is null");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIsNotNull() {
            addCriterion("TASK_STATUS is not null");
            return (Criteria) this;
        }

        public Criteria andTaskStatusEqualTo(String value) {
            addCriterion("TASK_STATUS =", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotEqualTo(String value) {
            addCriterion("TASK_STATUS <>", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusGreaterThan(String value) {
            addCriterion("TASK_STATUS >", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusGreaterThanOrEqualTo(String value) {
            addCriterion("TASK_STATUS >=", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLessThan(String value) {
            addCriterion("TASK_STATUS <", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLessThanOrEqualTo(String value) {
            addCriterion("TASK_STATUS <=", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLike(String value) {
            addCriterion("TASK_STATUS like", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotLike(String value) {
            addCriterion("TASK_STATUS not like", value, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusIn(List<String> values) {
            addCriterion("TASK_STATUS in", values, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotIn(List<String> values) {
            addCriterion("TASK_STATUS not in", values, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusBetween(String value1, String value2) {
            addCriterion("TASK_STATUS between", value1, value2, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskStatusNotBetween(String value1, String value2) {
            addCriterion("TASK_STATUS not between", value1, value2, "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseIsNull() {
            addCriterion("TASK_PHASE is null");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseIsNotNull() {
            addCriterion("TASK_PHASE is not null");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseEqualTo(String value) {
            addCriterion("TASK_PHASE =", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseNotEqualTo(String value) {
            addCriterion("TASK_PHASE <>", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseGreaterThan(String value) {
            addCriterion("TASK_PHASE >", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseGreaterThanOrEqualTo(String value) {
            addCriterion("TASK_PHASE >=", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseLessThan(String value) {
            addCriterion("TASK_PHASE <", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseLessThanOrEqualTo(String value) {
            addCriterion("TASK_PHASE <=", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseLike(String value) {
            addCriterion("TASK_PHASE like", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseNotLike(String value) {
            addCriterion("TASK_PHASE not like", value, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseIn(List<String> values) {
            addCriterion("TASK_PHASE in", values, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseNotIn(List<String> values) {
            addCriterion("TASK_PHASE not in", values, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseBetween(String value1, String value2) {
            addCriterion("TASK_PHASE between", value1, value2, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseNotBetween(String value1, String value2) {
            addCriterion("TASK_PHASE not between", value1, value2, "taskPhase");
            return (Criteria) this;
        }

        public Criteria andOutputLogIsNull() {
            addCriterion("OUTPUT_LOG is null");
            return (Criteria) this;
        }

        public Criteria andOutputLogIsNotNull() {
            addCriterion("OUTPUT_LOG is not null");
            return (Criteria) this;
        }

        public Criteria andOutputLogEqualTo(String value) {
            addCriterion("OUTPUT_LOG =", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogNotEqualTo(String value) {
            addCriterion("OUTPUT_LOG <>", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogGreaterThan(String value) {
            addCriterion("OUTPUT_LOG >", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogGreaterThanOrEqualTo(String value) {
            addCriterion("OUTPUT_LOG >=", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogLessThan(String value) {
            addCriterion("OUTPUT_LOG <", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogLessThanOrEqualTo(String value) {
            addCriterion("OUTPUT_LOG <=", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogLike(String value) {
            addCriterion("OUTPUT_LOG like", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogNotLike(String value) {
            addCriterion("OUTPUT_LOG not like", value, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogIn(List<String> values) {
            addCriterion("OUTPUT_LOG in", values, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogNotIn(List<String> values) {
            addCriterion("OUTPUT_LOG not in", values, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogBetween(String value1, String value2) {
            addCriterion("OUTPUT_LOG between", value1, value2, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputLogNotBetween(String value1, String value2) {
            addCriterion("OUTPUT_LOG not between", value1, value2, "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputFileIsNull() {
            addCriterion("OUTPUT_FILE is null");
            return (Criteria) this;
        }

        public Criteria andOutputFileIsNotNull() {
            addCriterion("OUTPUT_FILE is not null");
            return (Criteria) this;
        }

        public Criteria andOutputFileEqualTo(String value) {
            addCriterion("OUTPUT_FILE =", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileNotEqualTo(String value) {
            addCriterion("OUTPUT_FILE <>", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileGreaterThan(String value) {
            addCriterion("OUTPUT_FILE >", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileGreaterThanOrEqualTo(String value) {
            addCriterion("OUTPUT_FILE >=", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileLessThan(String value) {
            addCriterion("OUTPUT_FILE <", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileLessThanOrEqualTo(String value) {
            addCriterion("OUTPUT_FILE <=", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileLike(String value) {
            addCriterion("OUTPUT_FILE like", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileNotLike(String value) {
            addCriterion("OUTPUT_FILE not like", value, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileIn(List<String> values) {
            addCriterion("OUTPUT_FILE in", values, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileNotIn(List<String> values) {
            addCriterion("OUTPUT_FILE not in", values, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileBetween(String value1, String value2) {
            addCriterion("OUTPUT_FILE between", value1, value2, "outputFile");
            return (Criteria) this;
        }

        public Criteria andOutputFileNotBetween(String value1, String value2) {
            addCriterion("OUTPUT_FILE not between", value1, value2, "outputFile");
            return (Criteria) this;
        }

        public Criteria andTaskStatusLikeInsensitive(String value) {
            addCriterion("upper(TASK_STATUS) like", value.toUpperCase(), "taskStatus");
            return (Criteria) this;
        }

        public Criteria andTaskPhaseLikeInsensitive(String value) {
            addCriterion("upper(TASK_PHASE) like", value.toUpperCase(), "taskPhase");
            return (Criteria) this;
        }

        public Criteria andOutputLogLikeInsensitive(String value) {
            addCriterion("upper(OUTPUT_LOG) like", value.toUpperCase(), "outputLog");
            return (Criteria) this;
        }

        public Criteria andOutputFileLikeInsensitive(String value) {
            addCriterion("upper(OUTPUT_FILE) like", value.toUpperCase(), "outputFile");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated do_not_delete_during_merge Thu Apr 18 11:19:15 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_TASK_REQUEST_DETAILS
     *
     * @mbggenerated Thu Apr 18 11:19:15 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}