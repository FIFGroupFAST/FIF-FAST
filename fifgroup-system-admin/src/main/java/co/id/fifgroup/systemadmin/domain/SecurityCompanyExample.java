package co.id.fifgroup.systemadmin.domain;

import java.util.ArrayList;
import java.util.List;

public class SecurityCompanyExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public SecurityCompanyExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("SECURITY_COMPANY_ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("SECURITY_COMPANY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("SECURITY_COMPANY_ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("SECURITY_COMPANY_ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("SECURITY_COMPANY_ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("SECURITY_COMPANY_ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("SECURITY_COMPANY_ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("SECURITY_COMPANY_ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("SECURITY_COMPANY_ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("SECURITY_COMPANY_ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("SECURITY_COMPANY_ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("SECURITY_COMPANY_ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdIsNull() {
            addCriterion("RESP_COMPANY_ID is null");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdIsNotNull() {
            addCriterion("RESP_COMPANY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdEqualTo(Long value) {
            addCriterion("RESP_COMPANY_ID =", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdNotEqualTo(Long value) {
            addCriterion("RESP_COMPANY_ID <>", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdGreaterThan(Long value) {
            addCriterion("RESP_COMPANY_ID >", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("RESP_COMPANY_ID >=", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdLessThan(Long value) {
            addCriterion("RESP_COMPANY_ID <", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdLessThanOrEqualTo(Long value) {
            addCriterion("RESP_COMPANY_ID <=", value, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdIn(List<Long> values) {
            addCriterion("RESP_COMPANY_ID in", values, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdNotIn(List<Long> values) {
            addCriterion("RESP_COMPANY_ID not in", values, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdBetween(Long value1, Long value2) {
            addCriterion("RESP_COMPANY_ID between", value1, value2, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andRespCompanyIdNotBetween(Long value1, Long value2) {
            addCriterion("RESP_COMPANY_ID not between", value1, value2, "respCompanyId");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeIsNull() {
            addCriterion("SECURITY_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeIsNotNull() {
            addCriterion("SECURITY_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeEqualTo(String value) {
            addCriterion("SECURITY_TYPE =", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeNotEqualTo(String value) {
            addCriterion("SECURITY_TYPE <>", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeGreaterThan(String value) {
            addCriterion("SECURITY_TYPE >", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeGreaterThanOrEqualTo(String value) {
            addCriterion("SECURITY_TYPE >=", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeLessThan(String value) {
            addCriterion("SECURITY_TYPE <", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeLessThanOrEqualTo(String value) {
            addCriterion("SECURITY_TYPE <=", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeLike(String value) {
            addCriterion("SECURITY_TYPE like", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeNotLike(String value) {
            addCriterion("SECURITY_TYPE not like", value, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeIn(List<String> values) {
            addCriterion("SECURITY_TYPE in", values, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeNotIn(List<String> values) {
            addCriterion("SECURITY_TYPE not in", values, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeBetween(String value1, String value2) {
            addCriterion("SECURITY_TYPE between", value1, value2, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityTypeNotBetween(String value1, String value2) {
            addCriterion("SECURITY_TYPE not between", value1, value2, "securityType");
            return (Criteria) this;
        }

        public Criteria andSecurityIsNull() {
            addCriterion("SECURITY is null");
            return (Criteria) this;
        }

        public Criteria andSecurityIsNotNull() {
            addCriterion("SECURITY is not null");
            return (Criteria) this;
        }

        public Criteria andSecurityEqualTo(String value) {
            addCriterion("SECURITY =", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityNotEqualTo(String value) {
            addCriterion("SECURITY <>", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityGreaterThan(String value) {
            addCriterion("SECURITY >", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityGreaterThanOrEqualTo(String value) {
            addCriterion("SECURITY >=", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityLessThan(String value) {
            addCriterion("SECURITY <", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityLessThanOrEqualTo(String value) {
            addCriterion("SECURITY <=", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityLike(String value) {
            addCriterion("SECURITY like", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityNotLike(String value) {
            addCriterion("SECURITY not like", value, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityIn(List<String> values) {
            addCriterion("SECURITY in", values, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityNotIn(List<String> values) {
            addCriterion("SECURITY not in", values, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityBetween(String value1, String value2) {
            addCriterion("SECURITY between", value1, value2, "security");
            return (Criteria) this;
        }

        public Criteria andSecurityNotBetween(String value1, String value2) {
            addCriterion("SECURITY not between", value1, value2, "security");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdIsNull() {
            addCriterion("ORG_LEVEL_ID is null");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdIsNotNull() {
            addCriterion("ORG_LEVEL_ID is not null");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdEqualTo(Long value) {
            addCriterion("ORG_LEVEL_ID =", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdNotEqualTo(Long value) {
            addCriterion("ORG_LEVEL_ID <>", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdGreaterThan(Long value) {
            addCriterion("ORG_LEVEL_ID >", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdGreaterThanOrEqualTo(Long value) {
            addCriterion("ORG_LEVEL_ID >=", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdLessThan(Long value) {
            addCriterion("ORG_LEVEL_ID <", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdLessThanOrEqualTo(Long value) {
            addCriterion("ORG_LEVEL_ID <=", value, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdIn(List<Long> values) {
            addCriterion("ORG_LEVEL_ID in", values, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdNotIn(List<Long> values) {
            addCriterion("ORG_LEVEL_ID not in", values, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdBetween(Long value1, Long value2) {
            addCriterion("ORG_LEVEL_ID between", value1, value2, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andOrgLevelIdNotBetween(Long value1, Long value2) {
            addCriterion("ORG_LEVEL_ID not between", value1, value2, "orgLevelId");
            return (Criteria) this;
        }

        public Criteria andFilterIsNull() {
            addCriterion("FILTER is null");
            return (Criteria) this;
        }

        public Criteria andFilterIsNotNull() {
            addCriterion("FILTER is not null");
            return (Criteria) this;
        }

        public Criteria andFilterEqualTo(String value) {
            addCriterion("FILTER =", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterNotEqualTo(String value) {
            addCriterion("FILTER <>", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterGreaterThan(String value) {
            addCriterion("FILTER >", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterGreaterThanOrEqualTo(String value) {
            addCriterion("FILTER >=", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterLessThan(String value) {
            addCriterion("FILTER <", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterLessThanOrEqualTo(String value) {
            addCriterion("FILTER <=", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterLike(String value) {
            addCriterion("FILTER like", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterNotLike(String value) {
            addCriterion("FILTER not like", value, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterIn(List<String> values) {
            addCriterion("FILTER in", values, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterNotIn(List<String> values) {
            addCriterion("FILTER not in", values, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterBetween(String value1, String value2) {
            addCriterion("FILTER between", value1, value2, "filter");
            return (Criteria) this;
        }

        public Criteria andFilterNotBetween(String value1, String value2) {
            addCriterion("FILTER not between", value1, value2, "filter");
            return (Criteria) this;
        }

        public Criteria andRecursiveIsNull() {
            addCriterion("FLAG_RECURSIVE is null");
            return (Criteria) this;
        }

        public Criteria andRecursiveIsNotNull() {
            addCriterion("FLAG_RECURSIVE is not null");
            return (Criteria) this;
        }

        public Criteria andRecursiveEqualTo(boolean value) {
            addCriterion("FLAG_RECURSIVE =", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveNotEqualTo(boolean value) {
            addCriterion("FLAG_RECURSIVE <>", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveGreaterThan(boolean value) {
            addCriterion("FLAG_RECURSIVE >", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveGreaterThanOrEqualTo(boolean value) {
            addCriterion("FLAG_RECURSIVE >=", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveLessThan(boolean value) {
            addCriterion("FLAG_RECURSIVE <", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveLessThanOrEqualTo(boolean value) {
            addCriterion("FLAG_RECURSIVE <=", new Boolean(value), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveIn(List<Boolean> values) {
            addCriterion("FLAG_RECURSIVE in", values, "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveNotIn(List<Boolean> values) {
            addCriterion("FLAG_RECURSIVE not in", values, "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveBetween(boolean value1, boolean value2) {
            addCriterion("FLAG_RECURSIVE between", new Boolean(value1), new Boolean(value2), "recursive");
            return (Criteria) this;
        }

        public Criteria andRecursiveNotBetween(boolean value1, boolean value2) {
            addCriterion("FLAG_RECURSIVE not between", new Boolean(value1), new Boolean(value2), "recursive");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessIsNull() {
            addCriterion("FLAG_OTHER_USER is null");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessIsNotNull() {
            addCriterion("FLAG_OTHER_USER is not null");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessEqualTo(boolean value) {
            addCriterion("FLAG_OTHER_USER =", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessNotEqualTo(boolean value) {
            addCriterion("FLAG_OTHER_USER <>", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessGreaterThan(boolean value) {
            addCriterion("FLAG_OTHER_USER >", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessGreaterThanOrEqualTo(boolean value) {
            addCriterion("FLAG_OTHER_USER >=", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessLessThan(boolean value) {
            addCriterion("FLAG_OTHER_USER <", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessLessThanOrEqualTo(boolean value) {
            addCriterion("FLAG_OTHER_USER <=", new Boolean(value), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessIn(List<Boolean> values) {
            addCriterion("FLAG_OTHER_USER in", values, "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessNotIn(List<Boolean> values) {
            addCriterion("FLAG_OTHER_USER not in", values, "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessBetween(boolean value1, boolean value2) {
            addCriterion("FLAG_OTHER_USER between", new Boolean(value1), new Boolean(value2), "grantedOtherUserAccess");
            return (Criteria) this;
        }

        public Criteria andGrantedOtherUserAccessNotBetween(boolean value1, boolean value2) {
            addCriterion("FLAG_OTHER_USER not between", new Boolean(value1), new Boolean(value2), "grantedOtherUserAccess");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated do_not_delete_during_merge Tue Feb 19 16:18:33 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }

        public Criteria andSecurityTypeLikeInsensitive(String value) {
            addCriterion("upper(SECURITY_TYPE) like", value.toUpperCase(), "securityType");
            return this;
        }

        public Criteria andSecurityLikeInsensitive(String value) {
            addCriterion("upper(SECURITY) like", value.toUpperCase(), "security");
            return this;
        }

        public Criteria andFilterLikeInsensitive(String value) {
            addCriterion("upper(FILTER) like", value.toUpperCase(), "filter");
            return this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SAM_SECURITY_COMPANIES
     *
     * @mbggenerated Tue Feb 19 16:18:33 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value) {
            super();
            this.condition = condition;
            this.value = value;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.betweenValue = true;
        }
    }
}