package co.id.fifgroup.eligibility.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import co.id.fifgroup.eligibility.constant.FieldType;
import co.id.fifgroup.eligibility.constant.LookupValueFrom;

public class FactTypeFieldExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public FactTypeFieldExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andFactTypeIdIsNull() {
            addCriterion("FACT_TYPE_ID is null");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdIsNotNull() {
            addCriterion("FACT_TYPE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdEqualTo(String value) {
            addCriterion("FACT_TYPE_ID =", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdNotEqualTo(String value) {
            addCriterion("FACT_TYPE_ID <>", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdGreaterThan(String value) {
            addCriterion("FACT_TYPE_ID >", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdGreaterThanOrEqualTo(String value) {
            addCriterion("FACT_TYPE_ID >=", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdLessThan(String value) {
            addCriterion("FACT_TYPE_ID <", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdLessThanOrEqualTo(String value) {
            addCriterion("FACT_TYPE_ID <=", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdLike(String value) {
            addCriterion("FACT_TYPE_ID like", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdNotLike(String value) {
            addCriterion("FACT_TYPE_ID not like", value, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdIn(List<String> values) {
            addCriterion("FACT_TYPE_ID in", values, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdNotIn(List<String> values) {
            addCriterion("FACT_TYPE_ID not in", values, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdBetween(String value1, String value2) {
            addCriterion("FACT_TYPE_ID between", value1, value2, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdNotBetween(String value1, String value2) {
            addCriterion("FACT_TYPE_ID not between", value1, value2, "factTypeId");
            return (Criteria) this;
        }

        public Criteria andIdIsNull() {
            addCriterion("FIELD_ID is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("FIELD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(String value) {
            addCriterion("FIELD_ID =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(String value) {
            addCriterion("FIELD_ID <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(String value) {
            addCriterion("FIELD_ID >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(String value) {
            addCriterion("FIELD_ID >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(String value) {
            addCriterion("FIELD_ID <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(String value) {
            addCriterion("FIELD_ID <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLike(String value) {
            addCriterion("FIELD_ID like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotLike(String value) {
            addCriterion("FIELD_ID not like", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<String> values) {
            addCriterion("FIELD_ID in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<String> values) {
            addCriterion("FIELD_ID not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(String value1, String value2) {
            addCriterion("FIELD_ID between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(String value1, String value2) {
            addCriterion("FIELD_ID not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andNameIsNull() {
            addCriterion("FIELD_NAME is null");
            return (Criteria) this;
        }

        public Criteria andNameIsNotNull() {
            addCriterion("FIELD_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andNameEqualTo(String value) {
            addCriterion("FIELD_NAME =", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotEqualTo(String value) {
            addCriterion("FIELD_NAME <>", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThan(String value) {
            addCriterion("FIELD_NAME >", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameGreaterThanOrEqualTo(String value) {
            addCriterion("FIELD_NAME >=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThan(String value) {
            addCriterion("FIELD_NAME <", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLessThanOrEqualTo(String value) {
            addCriterion("FIELD_NAME <=", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameLike(String value) {
            addCriterion("FIELD_NAME like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotLike(String value) {
            addCriterion("FIELD_NAME not like", value, "name");
            return (Criteria) this;
        }

        public Criteria andNameIn(List<String> values) {
            addCriterion("FIELD_NAME in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotIn(List<String> values) {
            addCriterion("FIELD_NAME not in", values, "name");
            return (Criteria) this;
        }

        public Criteria andNameBetween(String value1, String value2) {
            addCriterion("FIELD_NAME between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andNameNotBetween(String value1, String value2) {
            addCriterion("FIELD_NAME not between", value1, value2, "name");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIsNull() {
            addCriterion("FIELD_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIsNotNull() {
            addCriterion("FIELD_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andFieldTypeEqualTo(FieldType value) {
            addCriterion("FIELD_TYPE =", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotEqualTo(FieldType value) {
            addCriterion("FIELD_TYPE <>", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeGreaterThan(FieldType value) {
            addCriterion("FIELD_TYPE >", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeGreaterThanOrEqualTo(FieldType value) {
            addCriterion("FIELD_TYPE >=", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeLessThan(FieldType value) {
            addCriterion("FIELD_TYPE <", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeLessThanOrEqualTo(FieldType value) {
            addCriterion("FIELD_TYPE <=", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeLike(FieldType value) {
            addCriterion("FIELD_TYPE like", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotLike(FieldType value) {
            addCriterion("FIELD_TYPE not like", value, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeIn(List<FieldType> values) {
            addCriterion("FIELD_TYPE in", values, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotIn(List<FieldType> values) {
            addCriterion("FIELD_TYPE not in", values, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeBetween(FieldType value1, FieldType value2) {
            addCriterion("FIELD_TYPE between", value1, value2, "fieldType");
            return (Criteria) this;
        }

        public Criteria andFieldTypeNotBetween(FieldType value1, FieldType value2) {
            addCriterion("FIELD_TYPE not between", value1, value2, "fieldType");
            return (Criteria) this;
        }

        public Criteria andLookupNameIsNull() {
            addCriterion("LOOKUP_NAME is null");
            return (Criteria) this;
        }

        public Criteria andLookupNameIsNotNull() {
            addCriterion("LOOKUP_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andLookupNameEqualTo(String value) {
            addCriterion("LOOKUP_NAME =", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameNotEqualTo(String value) {
            addCriterion("LOOKUP_NAME <>", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameGreaterThan(String value) {
            addCriterion("LOOKUP_NAME >", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameGreaterThanOrEqualTo(String value) {
            addCriterion("LOOKUP_NAME >=", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameLessThan(String value) {
            addCriterion("LOOKUP_NAME <", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameLessThanOrEqualTo(String value) {
            addCriterion("LOOKUP_NAME <=", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameLike(String value) {
            addCriterion("LOOKUP_NAME like", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameNotLike(String value) {
            addCriterion("LOOKUP_NAME not like", value, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameIn(List<String> values) {
            addCriterion("LOOKUP_NAME in", values, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameNotIn(List<String> values) {
            addCriterion("LOOKUP_NAME not in", values, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameBetween(String value1, String value2) {
            addCriterion("LOOKUP_NAME between", value1, value2, "lookupName");
            return (Criteria) this;
        }

        public Criteria andLookupNameNotBetween(String value1, String value2) {
            addCriterion("LOOKUP_NAME not between", value1, value2, "lookupName");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterion("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterion("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterion("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterion("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterion("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterion("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY =", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <>", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThan(Long value) {
            addCriterion("LAST_UPDATED_BY >", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY >=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThan(Long value) {
            addCriterion("LAST_UPDATED_BY <", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY not in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromIsNull() {
            addCriterion("LOOKUP_VALUE_FROM is null");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromIsNotNull() {
            addCriterion("LOOKUP_VALUE_FROM is not null");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromEqualTo(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM =", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromNotEqualTo(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM <>", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromGreaterThan(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM >", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromGreaterThanOrEqualTo(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM >=", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromLessThan(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM <", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromLessThanOrEqualTo(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM <=", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromLike(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM like", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromNotLike(LookupValueFrom value) {
            addCriterion("LOOKUP_VALUE_FROM not like", value, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromIn(List<LookupValueFrom> values) {
            addCriterion("LOOKUP_VALUE_FROM in", values, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromNotIn(List<LookupValueFrom> values) {
            addCriterion("LOOKUP_VALUE_FROM not in", values, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromBetween(LookupValueFrom value1, LookupValueFrom value2) {
            addCriterion("LOOKUP_VALUE_FROM between", value1, value2, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andLookupValueFromNotBetween(LookupValueFrom value1, LookupValueFrom value2) {
            addCriterion("LOOKUP_VALUE_FROM not between", value1, value2, "lookupValueFrom");
            return (Criteria) this;
        }

        public Criteria andFactTypeIdLikeInsensitive(String value) {
            addCriterion("upper(FACT_TYPE_ID) like", value.toUpperCase(), "factTypeId");
            return (Criteria) this;
        }

        public Criteria andIdLikeInsensitive(String value) {
            addCriterion("upper(FIELD_ID) like", value.toUpperCase(), "id");
            return (Criteria) this;
        }

        public Criteria andNameLikeInsensitive(String value) {
            addCriterion("upper(FIELD_NAME) like", value.toUpperCase(), "name");
            return (Criteria) this;
        }

        public Criteria andLookupNameLikeInsensitive(String value) {
            addCriterion("upper(LOOKUP_NAME) like", value.toUpperCase(), "lookupName");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated do_not_delete_during_merge Fri Sep 13 15:57:27 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table ELR_FACT_TYPE_FIELDS
     *
     * @mbggenerated Fri Sep 13 15:57:27 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}