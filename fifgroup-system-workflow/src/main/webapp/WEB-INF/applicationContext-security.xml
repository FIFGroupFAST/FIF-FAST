<beans:beans xmlns="http://www.springframework.org/schema/security"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:zksp="http://www.zkoss.org/2008/zkspring/security"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security.xsd">

	<global-method-security pre-post-annotations="enabled">
		<!-- AspectJ pointcut expression that locates our "post" method and applies security that way
		<protect-pointcut expression="execution(* bigbank.*Service.post*(..))" access="ROLE_TELLER"/>
		-->
	</global-method-security>
	
	<http auto-config="true" use-expressions="true">
		<csrf disabled="true"/>
		<intercept-url pattern="/~./**/*.zul" access="denyAll"/>
		<intercept-url pattern="/fif_login.zul" access="permitAll" />
		<intercept-url pattern="/fif_workspace.zul" access="isAuthenticated()" />
		<intercept-url pattern="/" access="isAuthenticated()" />
		<!--  Use a custom login page -->
		<form-login login-page="/fif_login.zul" authentication-failure-url="/fif_login.zul?login_error=1"/>
	</http>
 
<!-- 	<authentication-manager alias="authenticationManager"> -->
<!-- 		<authentication-provider> -->
<!-- 			<user-service> -->
<!-- 				<user name="ADMIN" password="password" authorities="ROLE_USER, ROLE_ADMIN" /> -->
<!-- 			</user-service> -->
<!-- 		</authentication-provider> -->
<!-- 	</authentication-manager> -->

	<authentication-manager>	
		<authentication-provider ref="authenticationProvider" />
	</authentication-manager>

	<beans:bean id="authenticationProvider" class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
<!-- 		<beans:property name="passwordEncoder" ref="encoder" /> -->
		<beans:property name="userDetailsService" ref="userDetailsService" />
	</beans:bean>

	<beans:bean id="userDetailsService" class="co.id.fifgroup.core.security.UserDetailsServiceImpl"/>
	<beans:bean id="encoder" class="org.springframework.security.crypto.password.StandardPasswordEncoder" />

</beans:beans>