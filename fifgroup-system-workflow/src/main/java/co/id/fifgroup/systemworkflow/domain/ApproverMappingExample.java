package co.id.fifgroup.systemworkflow.domain;

import java.util.ArrayList;
import java.util.List;
import java.util.UUID;

public class ApproverMappingExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public ApproverMappingExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> approverIdCriteria;

        protected List<Criterion> allCriteria;

        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
            approverIdCriteria = new ArrayList<Criterion>();
        }

        public List<Criterion> getApproverIdCriteria() {
            return approverIdCriteria;
        }

        protected void addApproverIdCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            approverIdCriteria.add(new Criterion(condition, value, "co.id.fifgroup.core.dao.mybatis.type.UUIDTypeHandler"));
            allCriteria = null;
        }

        protected void addApproverIdCriterion(String condition, UUID value1, UUID value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            approverIdCriteria.add(new Criterion(condition, value1, value2, "co.id.fifgroup.core.dao.mybatis.type.UUIDTypeHandler"));
            allCriteria = null;
        }

        public boolean isValid() {
            return criteria.size() > 0
                || approverIdCriteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            if (allCriteria == null) {
                allCriteria = new ArrayList<Criterion>();
                allCriteria.addAll(criteria);
                allCriteria.addAll(approverIdCriteria);
            }
            return allCriteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
            allCriteria = null;
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
            allCriteria = null;
        }

        public Criteria andApproverIdIsNull() {
            addCriterion("APPROVER_ID is null");
            return (Criteria) this;
        }

        public Criteria andApproverIdIsNotNull() {
            addCriterion("APPROVER_ID is not null");
            return (Criteria) this;
        }

        public Criteria andApproverIdEqualTo(UUID value) {
            addApproverIdCriterion("APPROVER_ID =", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdNotEqualTo(UUID value) {
            addApproverIdCriterion("APPROVER_ID <>", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdGreaterThan(UUID value) {
            addApproverIdCriterion("APPROVER_ID >", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdGreaterThanOrEqualTo(UUID value) {
            addApproverIdCriterion("APPROVER_ID >=", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdLessThan(UUID value) {
            addApproverIdCriterion("APPROVER_ID <", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdLessThanOrEqualTo(UUID value) {
            addApproverIdCriterion("APPROVER_ID <=", value, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdIn(List<UUID> values) {
            addApproverIdCriterion("APPROVER_ID in", values, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdNotIn(List<UUID> values) {
            addApproverIdCriterion("APPROVER_ID not in", values, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdBetween(UUID value1, UUID value2) {
            addApproverIdCriterion("APPROVER_ID between", value1, value2, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverIdNotBetween(UUID value1, UUID value2) {
            addApproverIdCriterion("APPROVER_ID not between", value1, value2, "approverId");
            return (Criteria) this;
        }

        public Criteria andApproverNameIsNull() {
            addCriterion("APPROVER_NAME is null");
            return (Criteria) this;
        }

        public Criteria andApproverNameIsNotNull() {
            addCriterion("APPROVER_NAME is not null");
            return (Criteria) this;
        }

        public Criteria andApproverNameEqualTo(String value) {
            addCriterion("APPROVER_NAME =", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameNotEqualTo(String value) {
            addCriterion("APPROVER_NAME <>", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameGreaterThan(String value) {
            addCriterion("APPROVER_NAME >", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameGreaterThanOrEqualTo(String value) {
            addCriterion("APPROVER_NAME >=", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameLessThan(String value) {
            addCriterion("APPROVER_NAME <", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameLessThanOrEqualTo(String value) {
            addCriterion("APPROVER_NAME <=", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameLike(String value) {
            addCriterion("APPROVER_NAME like", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameNotLike(String value) {
            addCriterion("APPROVER_NAME not like", value, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameIn(List<String> values) {
            addCriterion("APPROVER_NAME in", values, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameNotIn(List<String> values) {
            addCriterion("APPROVER_NAME not in", values, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameBetween(String value1, String value2) {
            addCriterion("APPROVER_NAME between", value1, value2, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverNameNotBetween(String value1, String value2) {
            addCriterion("APPROVER_NAME not between", value1, value2, "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverTypeIsNull() {
            addCriterion("APPROVER_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andApproverTypeIsNotNull() {
            addCriterion("APPROVER_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andApproverTypeEqualTo(String value) {
            addCriterion("APPROVER_TYPE =", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeNotEqualTo(String value) {
            addCriterion("APPROVER_TYPE <>", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeGreaterThan(String value) {
            addCriterion("APPROVER_TYPE >", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeGreaterThanOrEqualTo(String value) {
            addCriterion("APPROVER_TYPE >=", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeLessThan(String value) {
            addCriterion("APPROVER_TYPE <", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeLessThanOrEqualTo(String value) {
            addCriterion("APPROVER_TYPE <=", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeLike(String value) {
            addCriterion("APPROVER_TYPE like", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeNotLike(String value) {
            addCriterion("APPROVER_TYPE not like", value, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeIn(List<String> values) {
            addCriterion("APPROVER_TYPE in", values, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeNotIn(List<String> values) {
            addCriterion("APPROVER_TYPE not in", values, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeBetween(String value1, String value2) {
            addCriterion("APPROVER_TYPE between", value1, value2, "approverType");
            return (Criteria) this;
        }

        public Criteria andApproverTypeNotBetween(String value1, String value2) {
            addCriterion("APPROVER_TYPE not between", value1, value2, "approverType");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNull() {
            addCriterion("SEQUENCE is null");
            return (Criteria) this;
        }

        public Criteria andSequenceIsNotNull() {
            addCriterion("SEQUENCE is not null");
            return (Criteria) this;
        }

        public Criteria andSequenceEqualTo(Long value) {
            addCriterion("SEQUENCE =", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotEqualTo(Long value) {
            addCriterion("SEQUENCE <>", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThan(Long value) {
            addCriterion("SEQUENCE >", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceGreaterThanOrEqualTo(Long value) {
            addCriterion("SEQUENCE >=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThan(Long value) {
            addCriterion("SEQUENCE <", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceLessThanOrEqualTo(Long value) {
            addCriterion("SEQUENCE <=", value, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceIn(List<Long> values) {
            addCriterion("SEQUENCE in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotIn(List<Long> values) {
            addCriterion("SEQUENCE not in", values, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceBetween(Long value1, Long value2) {
            addCriterion("SEQUENCE between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andSequenceNotBetween(Long value1, Long value2) {
            addCriterion("SEQUENCE not between", value1, value2, "sequence");
            return (Criteria) this;
        }

        public Criteria andApproverNameLikeInsensitive(String value) {
            addCriterion("upper(APPROVER_NAME) like", value.toUpperCase(), "approverName");
            return (Criteria) this;
        }

        public Criteria andApproverTypeLikeInsensitive(String value) {
            addCriterion("upper(APPROVER_TYPE) like", value.toUpperCase(), "approverType");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 05 17:01:53 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_APPROVER_MAPPING
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}