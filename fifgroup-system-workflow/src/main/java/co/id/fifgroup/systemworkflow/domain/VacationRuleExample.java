package co.id.fifgroup.systemworkflow.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class VacationRuleExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public VacationRuleExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andVacationRuleIdIsNull() {
            addCriterion("VACATION_RULE_ID is null");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdIsNotNull() {
            addCriterion("VACATION_RULE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdEqualTo(Long value) {
            addCriterion("VACATION_RULE_ID =", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdNotEqualTo(Long value) {
            addCriterion("VACATION_RULE_ID <>", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdGreaterThan(Long value) {
            addCriterion("VACATION_RULE_ID >", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("VACATION_RULE_ID >=", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdLessThan(Long value) {
            addCriterion("VACATION_RULE_ID <", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdLessThanOrEqualTo(Long value) {
            addCriterion("VACATION_RULE_ID <=", value, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdIn(List<Long> values) {
            addCriterion("VACATION_RULE_ID in", values, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdNotIn(List<Long> values) {
            addCriterion("VACATION_RULE_ID not in", values, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdBetween(Long value1, Long value2) {
            addCriterion("VACATION_RULE_ID between", value1, value2, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andVacationRuleIdNotBetween(Long value1, Long value2) {
            addCriterion("VACATION_RULE_ID not between", value1, value2, "vacationRuleId");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromIsNull() {
            addCriterion("EFFECTIVE_DATE_FROM is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromIsNotNull() {
            addCriterion("EFFECTIVE_DATE_FROM is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM =", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromNotEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM <>", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromGreaterThan(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM >", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromGreaterThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM >=", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromLessThan(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM <", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromLessThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_FROM <=", value, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromIn(List<Date> values) {
            addCriterion("EFFECTIVE_DATE_FROM in", values, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromNotIn(List<Date> values) {
            addCriterion("EFFECTIVE_DATE_FROM not in", values, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_DATE_FROM between", value1, value2, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateFromNotBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_DATE_FROM not between", value1, value2, "effectiveDateFrom");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToIsNull() {
            addCriterion("EFFECTIVE_DATE_TO is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToIsNotNull() {
            addCriterion("EFFECTIVE_DATE_TO is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_TO =", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToNotEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_TO <>", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToGreaterThan(Date value) {
            addCriterion("EFFECTIVE_DATE_TO >", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToGreaterThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_TO >=", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToLessThan(Date value) {
            addCriterion("EFFECTIVE_DATE_TO <", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToLessThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_DATE_TO <=", value, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToIn(List<Date> values) {
            addCriterion("EFFECTIVE_DATE_TO in", values, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToNotIn(List<Date> values) {
            addCriterion("EFFECTIVE_DATE_TO not in", values, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_DATE_TO between", value1, value2, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andEffectiveDateToNotBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_DATE_TO not between", value1, value2, "effectiveDateTo");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNull() {
            addCriterion("CREATED_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIsNotNull() {
            addCriterion("CREATED_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedDateEqualTo(Date value) {
            addCriterion("CREATED_DATE =", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotEqualTo(Date value) {
            addCriterion("CREATED_DATE <>", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThan(Date value) {
            addCriterion("CREATED_DATE >", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATED_DATE >=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThan(Date value) {
            addCriterion("CREATED_DATE <", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATED_DATE <=", value, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateIn(List<Date> values) {
            addCriterion("CREATED_DATE in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotIn(List<Date> values) {
            addCriterion("CREATED_DATE not in", values, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateBetween(Date value1, Date value2) {
            addCriterion("CREATED_DATE between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andCreatedDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATED_DATE not between", value1, value2, "createdDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY =", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <>", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThan(Long value) {
            addCriterion("LAST_UPDATED_BY >", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY >=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThan(Long value) {
            addCriterion("LAST_UPDATED_BY <", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY not in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIsNull() {
            addCriterion("LAST_UPDATED_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIsNotNull() {
            addCriterion("LAST_UPDATED_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateEqualTo(Date value) {
            addCriterion("LAST_UPDATED_DATE =", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATED_DATE <>", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATED_DATE >", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_DATE >=", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateLessThan(Date value) {
            addCriterion("LAST_UPDATED_DATE <", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATED_DATE <=", value, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateIn(List<Date> values) {
            addCriterion("LAST_UPDATED_DATE in", values, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATED_DATE not in", values, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_DATE between", value1, value2, "lastUpdatedDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATED_DATE not between", value1, value2, "lastUpdatedDate");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated do_not_delete_during_merge Tue Mar 05 17:01:53 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table SWF_VACATION_RULE
     *
     * @mbggenerated Tue Mar 05 17:01:53 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}