package co.id.fifgroup.workstructure.domain;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class GradeUploadStageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public GradeUploadStageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUploadIdIsNull() {
            addCriterion("UPLOAD_ID is null");
            return (Criteria) this;
        }

        public Criteria andUploadIdIsNotNull() {
            addCriterion("UPLOAD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUploadIdEqualTo(Long value) {
            addCriterion("UPLOAD_ID =", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotEqualTo(Long value) {
            addCriterion("UPLOAD_ID <>", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThan(Long value) {
            addCriterion("UPLOAD_ID >", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThanOrEqualTo(Long value) {
            addCriterion("UPLOAD_ID >=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThan(Long value) {
            addCriterion("UPLOAD_ID <", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThanOrEqualTo(Long value) {
            addCriterion("UPLOAD_ID <=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdIn(List<Long> values) {
            addCriterion("UPLOAD_ID in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotIn(List<Long> values) {
            addCriterion("UPLOAD_ID not in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdBetween(Long value1, Long value2) {
            addCriterion("UPLOAD_ID between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotBetween(Long value1, Long value2) {
            addCriterion("UPLOAD_ID not between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andDateFromIsNull() {
            addCriterion("DATE_FROM is null");
            return (Criteria) this;
        }

        public Criteria andDateFromIsNotNull() {
            addCriterion("DATE_FROM is not null");
            return (Criteria) this;
        }

        public Criteria andDateFromEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FROM =", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FROM <>", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromGreaterThan(Date value) {
            addCriterionForJDBCDate("DATE_FROM >", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FROM >=", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromLessThan(Date value) {
            addCriterionForJDBCDate("DATE_FROM <", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_FROM <=", value, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_FROM in", values, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_FROM not in", values, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_FROM between", value1, value2, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateFromNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_FROM not between", value1, value2, "dateFrom");
            return (Criteria) this;
        }

        public Criteria andDateToIsNull() {
            addCriterion("DATE_TO is null");
            return (Criteria) this;
        }

        public Criteria andDateToIsNotNull() {
            addCriterion("DATE_TO is not null");
            return (Criteria) this;
        }

        public Criteria andDateToEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_TO =", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_TO <>", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToGreaterThan(Date value) {
            addCriterionForJDBCDate("DATE_TO >", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_TO >=", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToLessThan(Date value) {
            addCriterionForJDBCDate("DATE_TO <", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DATE_TO <=", value, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_TO in", values, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotIn(List<Date> values) {
            addCriterionForJDBCDate("DATE_TO not in", values, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_TO between", value1, value2, "dateTo");
            return (Criteria) this;
        }

        public Criteria andDateToNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DATE_TO not between", value1, value2, "dateTo");
            return (Criteria) this;
        }

        public Criteria andGradeCodeIsNull() {
            addCriterion("GRADE_CODE is null");
            return (Criteria) this;
        }

        public Criteria andGradeCodeIsNotNull() {
            addCriterion("GRADE_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andGradeCodeEqualTo(String value) {
            addCriterion("GRADE_CODE =", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeNotEqualTo(String value) {
            addCriterion("GRADE_CODE <>", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeGreaterThan(String value) {
            addCriterion("GRADE_CODE >", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("GRADE_CODE >=", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeLessThan(String value) {
            addCriterion("GRADE_CODE <", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeLessThanOrEqualTo(String value) {
            addCriterion("GRADE_CODE <=", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeLike(String value) {
            addCriterion("GRADE_CODE like", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeNotLike(String value) {
            addCriterion("GRADE_CODE not like", value, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeIn(List<String> values) {
            addCriterion("GRADE_CODE in", values, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeNotIn(List<String> values) {
            addCriterion("GRADE_CODE not in", values, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeBetween(String value1, String value2) {
            addCriterion("GRADE_CODE between", value1, value2, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeCodeNotBetween(String value1, String value2) {
            addCriterion("GRADE_CODE not between", value1, value2, "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeIsNull() {
            addCriterion("GRADE is null");
            return (Criteria) this;
        }

        public Criteria andGradeIsNotNull() {
            addCriterion("GRADE is not null");
            return (Criteria) this;
        }

        public Criteria andGradeEqualTo(String value) {
            addCriterion("GRADE =", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotEqualTo(String value) {
            addCriterion("GRADE <>", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThan(String value) {
            addCriterion("GRADE >", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeGreaterThanOrEqualTo(String value) {
            addCriterion("GRADE >=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThan(String value) {
            addCriterion("GRADE <", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLessThanOrEqualTo(String value) {
            addCriterion("GRADE <=", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeLike(String value) {
            addCriterion("GRADE like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotLike(String value) {
            addCriterion("GRADE not like", value, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeIn(List<String> values) {
            addCriterion("GRADE in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotIn(List<String> values) {
            addCriterion("GRADE not in", values, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeBetween(String value1, String value2) {
            addCriterion("GRADE between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andGradeNotBetween(String value1, String value2) {
            addCriterion("GRADE not between", value1, value2, "grade");
            return (Criteria) this;
        }

        public Criteria andSubGradeIsNull() {
            addCriterion("SUB_GRADE is null");
            return (Criteria) this;
        }

        public Criteria andSubGradeIsNotNull() {
            addCriterion("SUB_GRADE is not null");
            return (Criteria) this;
        }

        public Criteria andSubGradeEqualTo(String value) {
            addCriterion("SUB_GRADE =", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeNotEqualTo(String value) {
            addCriterion("SUB_GRADE <>", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeGreaterThan(String value) {
            addCriterion("SUB_GRADE >", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeGreaterThanOrEqualTo(String value) {
            addCriterion("SUB_GRADE >=", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeLessThan(String value) {
            addCriterion("SUB_GRADE <", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeLessThanOrEqualTo(String value) {
            addCriterion("SUB_GRADE <=", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeLike(String value) {
            addCriterion("SUB_GRADE like", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeNotLike(String value) {
            addCriterion("SUB_GRADE not like", value, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeIn(List<String> values) {
            addCriterion("SUB_GRADE in", values, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeNotIn(List<String> values) {
            addCriterion("SUB_GRADE not in", values, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeBetween(String value1, String value2) {
            addCriterion("SUB_GRADE between", value1, value2, "subGrade");
            return (Criteria) this;
        }

        public Criteria andSubGradeNotBetween(String value1, String value2) {
            addCriterion("SUB_GRADE not between", value1, value2, "subGrade");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNull() {
            addCriterion("DESCRIPTION is null");
            return (Criteria) this;
        }

        public Criteria andDescriptionIsNotNull() {
            addCriterion("DESCRIPTION is not null");
            return (Criteria) this;
        }

        public Criteria andDescriptionEqualTo(String value) {
            addCriterion("DESCRIPTION =", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotEqualTo(String value) {
            addCriterion("DESCRIPTION <>", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThan(String value) {
            addCriterion("DESCRIPTION >", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionGreaterThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION >=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThan(String value) {
            addCriterion("DESCRIPTION <", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLessThanOrEqualTo(String value) {
            addCriterion("DESCRIPTION <=", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionLike(String value) {
            addCriterion("DESCRIPTION like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotLike(String value) {
            addCriterion("DESCRIPTION not like", value, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionIn(List<String> values) {
            addCriterion("DESCRIPTION in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotIn(List<String> values) {
            addCriterion("DESCRIPTION not in", values, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionBetween(String value1, String value2) {
            addCriterion("DESCRIPTION between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andDescriptionNotBetween(String value1, String value2) {
            addCriterion("DESCRIPTION not between", value1, value2, "description");
            return (Criteria) this;
        }

        public Criteria andBranchIdIsNull() {
            addCriterion("BRANCH_ID is null");
            return (Criteria) this;
        }

        public Criteria andBranchIdIsNotNull() {
            addCriterion("BRANCH_ID is not null");
            return (Criteria) this;
        }

        public Criteria andBranchIdEqualTo(Long value) {
            addCriterion("BRANCH_ID =", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdNotEqualTo(Long value) {
            addCriterion("BRANCH_ID <>", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdGreaterThan(Long value) {
            addCriterion("BRANCH_ID >", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdGreaterThanOrEqualTo(Long value) {
            addCriterion("BRANCH_ID >=", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdLessThan(Long value) {
            addCriterion("BRANCH_ID <", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdLessThanOrEqualTo(Long value) {
            addCriterion("BRANCH_ID <=", value, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdIn(List<Long> values) {
            addCriterion("BRANCH_ID in", values, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdNotIn(List<Long> values) {
            addCriterion("BRANCH_ID not in", values, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdBetween(Long value1, Long value2) {
            addCriterion("BRANCH_ID between", value1, value2, "branchId");
            return (Criteria) this;
        }

        public Criteria andBranchIdNotBetween(Long value1, Long value2) {
            addCriterion("BRANCH_ID not between", value1, value2, "branchId");
            return (Criteria) this;
        }

        public Criteria andMinSalaryIsNull() {
            addCriterion("MIN_SALARY is null");
            return (Criteria) this;
        }

        public Criteria andMinSalaryIsNotNull() {
            addCriterion("MIN_SALARY is not null");
            return (Criteria) this;
        }

        public Criteria andMinSalaryEqualTo(BigDecimal value) {
            addCriterion("MIN_SALARY =", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryNotEqualTo(BigDecimal value) {
            addCriterion("MIN_SALARY <>", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryGreaterThan(BigDecimal value) {
            addCriterion("MIN_SALARY >", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MIN_SALARY >=", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryLessThan(BigDecimal value) {
            addCriterion("MIN_SALARY <", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MIN_SALARY <=", value, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryIn(List<BigDecimal> values) {
            addCriterion("MIN_SALARY in", values, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryNotIn(List<BigDecimal> values) {
            addCriterion("MIN_SALARY not in", values, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MIN_SALARY between", value1, value2, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMinSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MIN_SALARY not between", value1, value2, "minSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryIsNull() {
            addCriterion("MAX_SALARY is null");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryIsNotNull() {
            addCriterion("MAX_SALARY is not null");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryEqualTo(BigDecimal value) {
            addCriterion("MAX_SALARY =", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryNotEqualTo(BigDecimal value) {
            addCriterion("MAX_SALARY <>", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryGreaterThan(BigDecimal value) {
            addCriterion("MAX_SALARY >", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryGreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("MAX_SALARY >=", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryLessThan(BigDecimal value) {
            addCriterion("MAX_SALARY <", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryLessThanOrEqualTo(BigDecimal value) {
            addCriterion("MAX_SALARY <=", value, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryIn(List<BigDecimal> values) {
            addCriterion("MAX_SALARY in", values, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryNotIn(List<BigDecimal> values) {
            addCriterion("MAX_SALARY not in", values, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MAX_SALARY between", value1, value2, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andMaxSalaryNotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("MAX_SALARY not between", value1, value2, "maxSalary");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeIsNull() {
            addCriterion("PERSONAL_GRADE_CODE is null");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeIsNotNull() {
            addCriterion("PERSONAL_GRADE_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeEqualTo(String value) {
            addCriterion("PERSONAL_GRADE_CODE =", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeNotEqualTo(String value) {
            addCriterion("PERSONAL_GRADE_CODE <>", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeGreaterThan(String value) {
            addCriterion("PERSONAL_GRADE_CODE >", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeGreaterThanOrEqualTo(String value) {
            addCriterion("PERSONAL_GRADE_CODE >=", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeLessThan(String value) {
            addCriterion("PERSONAL_GRADE_CODE <", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeLessThanOrEqualTo(String value) {
            addCriterion("PERSONAL_GRADE_CODE <=", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeLike(String value) {
            addCriterion("PERSONAL_GRADE_CODE like", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeNotLike(String value) {
            addCriterion("PERSONAL_GRADE_CODE not like", value, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeIn(List<String> values) {
            addCriterion("PERSONAL_GRADE_CODE in", values, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeNotIn(List<String> values) {
            addCriterion("PERSONAL_GRADE_CODE not in", values, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeBetween(String value1, String value2) {
            addCriterion("PERSONAL_GRADE_CODE between", value1, value2, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeNotBetween(String value1, String value2) {
            addCriterion("PERSONAL_GRADE_CODE not between", value1, value2, "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andRowNumberIsNull() {
            addCriterion("ROW_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andRowNumberIsNotNull() {
            addCriterion("ROW_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andRowNumberEqualTo(Integer value) {
            addCriterion("ROW_NUMBER =", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotEqualTo(Integer value) {
            addCriterion("ROW_NUMBER <>", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberGreaterThan(Integer value) {
            addCriterion("ROW_NUMBER >", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberGreaterThanOrEqualTo(Integer value) {
            addCriterion("ROW_NUMBER >=", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberLessThan(Integer value) {
            addCriterion("ROW_NUMBER <", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberLessThanOrEqualTo(Integer value) {
            addCriterion("ROW_NUMBER <=", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberIn(List<Integer> values) {
            addCriterion("ROW_NUMBER in", values, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotIn(List<Integer> values) {
            addCriterion("ROW_NUMBER not in", values, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberBetween(Integer value1, Integer value2) {
            addCriterion("ROW_NUMBER between", value1, value2, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotBetween(Integer value1, Integer value2) {
            addCriterion("ROW_NUMBER not between", value1, value2, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRawDataIsNull() {
            addCriterion("RAW_DATA is null");
            return (Criteria) this;
        }

        public Criteria andRawDataIsNotNull() {
            addCriterion("RAW_DATA is not null");
            return (Criteria) this;
        }

        public Criteria andRawDataEqualTo(String value) {
            addCriterion("RAW_DATA =", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotEqualTo(String value) {
            addCriterion("RAW_DATA <>", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataGreaterThan(String value) {
            addCriterion("RAW_DATA >", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataGreaterThanOrEqualTo(String value) {
            addCriterion("RAW_DATA >=", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLessThan(String value) {
            addCriterion("RAW_DATA <", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLessThanOrEqualTo(String value) {
            addCriterion("RAW_DATA <=", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLike(String value) {
            addCriterion("RAW_DATA like", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotLike(String value) {
            addCriterion("RAW_DATA not like", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataIn(List<String> values) {
            addCriterion("RAW_DATA in", values, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotIn(List<String> values) {
            addCriterion("RAW_DATA not in", values, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataBetween(String value1, String value2) {
            addCriterion("RAW_DATA between", value1, value2, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotBetween(String value1, String value2) {
            addCriterion("RAW_DATA not between", value1, value2, "rawData");
            return (Criteria) this;
        }

        public Criteria andIsClosedIsNull() {
            addCriterion("IS_CLOSED is null");
            return (Criteria) this;
        }

        public Criteria andIsClosedIsNotNull() {
            addCriterion("IS_CLOSED is not null");
            return (Criteria) this;
        }

        public Criteria andIsClosedEqualTo(Boolean value) {
            addCriterion("IS_CLOSED =", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotEqualTo(Boolean value) {
            addCriterion("IS_CLOSED <>", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedGreaterThan(Boolean value) {
            addCriterion("IS_CLOSED >", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_CLOSED >=", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedLessThan(Boolean value) {
            addCriterion("IS_CLOSED <", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_CLOSED <=", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedIn(List<Boolean> values) {
            addCriterion("IS_CLOSED in", values, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotIn(List<Boolean> values) {
            addCriterion("IS_CLOSED not in", values, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CLOSED between", value1, value2, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_CLOSED not between", value1, value2, "isClosed");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdIsNull() {
            addCriterion("WORKING_SCHEDULE_ID is null");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdIsNotNull() {
            addCriterion("WORKING_SCHEDULE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdEqualTo(Long value) {
            addCriterion("WORKING_SCHEDULE_ID =", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdNotEqualTo(Long value) {
            addCriterion("WORKING_SCHEDULE_ID <>", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdGreaterThan(Long value) {
            addCriterion("WORKING_SCHEDULE_ID >", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdGreaterThanOrEqualTo(Long value) {
            addCriterion("WORKING_SCHEDULE_ID >=", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdLessThan(Long value) {
            addCriterion("WORKING_SCHEDULE_ID <", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdLessThanOrEqualTo(Long value) {
            addCriterion("WORKING_SCHEDULE_ID <=", value, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdIn(List<Long> values) {
            addCriterion("WORKING_SCHEDULE_ID in", values, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdNotIn(List<Long> values) {
            addCriterion("WORKING_SCHEDULE_ID not in", values, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdBetween(Long value1, Long value2) {
            addCriterion("WORKING_SCHEDULE_ID between", value1, value2, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andWorkingScheduleIdNotBetween(Long value1, Long value2) {
            addCriterion("WORKING_SCHEDULE_ID not between", value1, value2, "workingScheduleId");
            return (Criteria) this;
        }

        public Criteria andGradeCodeLikeInsensitive(String value) {
            addCriterion("upper(GRADE_CODE) like", value.toUpperCase(), "gradeCode");
            return (Criteria) this;
        }

        public Criteria andGradeLikeInsensitive(String value) {
            addCriterion("upper(GRADE) like", value.toUpperCase(), "grade");
            return (Criteria) this;
        }

        public Criteria andSubGradeLikeInsensitive(String value) {
            addCriterion("upper(SUB_GRADE) like", value.toUpperCase(), "subGrade");
            return (Criteria) this;
        }

        public Criteria andDescriptionLikeInsensitive(String value) {
            addCriterion("upper(DESCRIPTION) like", value.toUpperCase(), "description");
            return (Criteria) this;
        }

        public Criteria andPersonalGradeCodeLikeInsensitive(String value) {
            addCriterion("upper(PERSONAL_GRADE_CODE) like", value.toUpperCase(), "personalGradeCode");
            return (Criteria) this;
        }

        public Criteria andRawDataLikeInsensitive(String value) {
            addCriterion("upper(RAW_DATA) like", value.toUpperCase(), "rawData");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 03 15:54:56 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table WOS_GRADE_STG
     *
     * @mbggenerated Wed Jul 03 15:54:56 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}