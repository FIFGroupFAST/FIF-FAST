<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.id.fifgroup.basicsetup.dao.FormulaParameterFinder">
	
	<resultMap id="BaseResultMapInquiry" type = "co.id.fifgroup.basicsetup.dto.FormulaParameterDTO">
		<id column="FORMULA_PARAMETER_ID" jdbcType="DECIMAL" property="formulaParameterId" />
	    <result column="PARAMETER_NAME" jdbcType="VARCHAR" property="parameterName" />
	    <result column="RETURN_TYPE" jdbcType="VARCHAR" property="returnType" />
	    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
	    <result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
	    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
	    <result column="LAST_UPDATED_BY" jdbcType="DECIMAL" property="lastUpdatedBy" />
    	<result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
	    <result column="USER_NAME" property="userName" jdbcType="VARCHAR"/>
	</resultMap>
	
	<select id="getCountFormulaParameterDtoByParameterName" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			BSE_FORMULA_PARAMETERS FP LEFT JOIN SAM_USERS SU ON(SU.USER_ID = FP.LAST_UPDATED_BY)
		<where>
			<if test="parameterName != null">
				UPPER(PARAMETER_NAME) LIKE UPPER(#{parameterName, jdbcType=VARCHAR})
			</if>
		</where>
	</select>
	
	<select id="getCountFormulaParameterDtoByParameterNameAndDescription" parameterType="map" resultType="int">
		SELECT
			COUNT(*)
		FROM
			BSE_FORMULA_PARAMETERS FP LEFT JOIN SAM_USERS SU ON(SU.USER_ID = FP.LAST_UPDATED_BY)
		<where>
			<if test="parameterName != null">
				UPPER(FP.PARAMETER_NAME) LIKE UPPER(#{parameterName, jdbcType=VARCHAR})
			</if>
			<if test="description != null">
				AND UPPER(FP.DESCRIPTION) LIKE UPPER (#{description, jdbcType=VARCHAR})
			</if>
		</where>
	</select>
	
	<select id="getFormulaParameterDtoByParameterNameWithRowbounds" parameterType="map" resultMap ="BaseResultMapInquiry">
		SELECT
			FP.FORMULA_PARAMETER_ID,
			FP.PARAMETER_NAME,
			FP.RETURN_TYPE,
			FP.DESCRIPTION,
			FP.CREATED_BY,
			FP.CREATION_DATE,
			FP.LAST_UPDATED_BY,
			FP.LAST_UPDATE_DATE,
			SU.USER_NAME
		FROM
			BSE_FORMULA_PARAMETERS FP LEFT JOIN SAM_USERS SU ON(SU.USER_ID = FP.LAST_UPDATED_BY)
		<where>
			<if test="parameterName != null">
				UPPER(FP.PARAMETER_NAME) LIKE UPPER(#{parameterName, jdbcType=VARCHAR})
			</if>
		</where>
	</select>
	
	<select id="getFormulaParameterDtoByParameterNameAndDescription" parameterType="map" resultMap ="BaseResultMapInquiry">
		SELECT
			FP.FORMULA_PARAMETER_ID,
			FP.PARAMETER_NAME,
			FP.RETURN_TYPE,
			FP.DESCRIPTION,
			FP.CREATED_BY,
			FP.CREATION_DATE,
			FP.LAST_UPDATED_BY,
			FP.LAST_UPDATE_DATE,
			SU.USER_NAME
		FROM
			BSE_FORMULA_PARAMETERS FP LEFT JOIN SAM_USERS SU ON(SU.USER_ID = FP.LAST_UPDATED_BY)
		<where>
			<if test="parameterName != null">
				UPPER(FP.PARAMETER_NAME) LIKE UPPER(#{parameterName, jdbcType=VARCHAR})
			</if>
			<if test="description != null">
			AND UPPER(NVL(FP.DESCRIPTION, '')) LIKE UPPER (#{description, jdbcType=VARCHAR})
			</if>
			<if test="description == null">
			AND (UPPER(NVL(FP.DESCRIPTION, '')) LIKE UPPER ('%%') or fp.description is null)
			</if>
		</where>
	</select>
</mapper>
	