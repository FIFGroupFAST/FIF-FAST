package co.id.fifgroup.basicsetup.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class LookupDynamicExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public LookupDynamicExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andLookupQueryIdIsNull() {
            addCriterion("LOOKUP_QUERY_ID is null");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdIsNotNull() {
            addCriterion("LOOKUP_QUERY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdEqualTo(Long value) {
            addCriterion("LOOKUP_QUERY_ID =", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdNotEqualTo(Long value) {
            addCriterion("LOOKUP_QUERY_ID <>", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdGreaterThan(Long value) {
            addCriterion("LOOKUP_QUERY_ID >", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdGreaterThanOrEqualTo(Long value) {
            addCriterion("LOOKUP_QUERY_ID >=", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdLessThan(Long value) {
            addCriterion("LOOKUP_QUERY_ID <", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdLessThanOrEqualTo(Long value) {
            addCriterion("LOOKUP_QUERY_ID <=", value, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdIn(List<Long> values) {
            addCriterion("LOOKUP_QUERY_ID in", values, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdNotIn(List<Long> values) {
            addCriterion("LOOKUP_QUERY_ID not in", values, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdBetween(Long value1, Long value2) {
            addCriterion("LOOKUP_QUERY_ID between", value1, value2, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupQueryIdNotBetween(Long value1, Long value2) {
            addCriterion("LOOKUP_QUERY_ID not between", value1, value2, "lookupQueryId");
            return (Criteria) this;
        }

        public Criteria andLookupIdIsNull() {
            addCriterion("LOOKUP_ID is null");
            return (Criteria) this;
        }

        public Criteria andLookupIdIsNotNull() {
            addCriterion("LOOKUP_ID is not null");
            return (Criteria) this;
        }

        public Criteria andLookupIdEqualTo(Long value) {
            addCriterion("LOOKUP_ID =", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdNotEqualTo(Long value) {
            addCriterion("LOOKUP_ID <>", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdGreaterThan(Long value) {
            addCriterion("LOOKUP_ID >", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdGreaterThanOrEqualTo(Long value) {
            addCriterion("LOOKUP_ID >=", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdLessThan(Long value) {
            addCriterion("LOOKUP_ID <", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdLessThanOrEqualTo(Long value) {
            addCriterion("LOOKUP_ID <=", value, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdIn(List<Long> values) {
            addCriterion("LOOKUP_ID in", values, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdNotIn(List<Long> values) {
            addCriterion("LOOKUP_ID not in", values, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdBetween(Long value1, Long value2) {
            addCriterion("LOOKUP_ID between", value1, value2, "lookupId");
            return (Criteria) this;
        }

        public Criteria andLookupIdNotBetween(Long value1, Long value2) {
            addCriterion("LOOKUP_ID not between", value1, value2, "lookupId");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeIsNull() {
            addCriterion("COMPANY_SCOPE is null");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeIsNotNull() {
            addCriterion("COMPANY_SCOPE is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeEqualTo(Long value) {
            addCriterion("COMPANY_SCOPE =", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeNotEqualTo(Long value) {
            addCriterion("COMPANY_SCOPE <>", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeGreaterThan(Long value) {
            addCriterion("COMPANY_SCOPE >", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeGreaterThanOrEqualTo(Long value) {
            addCriterion("COMPANY_SCOPE >=", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeLessThan(Long value) {
            addCriterion("COMPANY_SCOPE <", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeLessThanOrEqualTo(Long value) {
            addCriterion("COMPANY_SCOPE <=", value, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeIn(List<Long> values) {
            addCriterion("COMPANY_SCOPE in", values, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeNotIn(List<Long> values) {
            addCriterion("COMPANY_SCOPE not in", values, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeBetween(Long value1, Long value2) {
            addCriterion("COMPANY_SCOPE between", value1, value2, "companyScope");
            return (Criteria) this;
        }

        public Criteria andCompanyScopeNotBetween(Long value1, Long value2) {
            addCriterion("COMPANY_SCOPE not between", value1, value2, "companyScope");
            return (Criteria) this;
        }

        public Criteria andSelectStatementIsNull() {
            addCriterion("SELECT_STATEMENT is null");
            return (Criteria) this;
        }

        public Criteria andSelectStatementIsNotNull() {
            addCriterion("SELECT_STATEMENT is not null");
            return (Criteria) this;
        }

        public Criteria andSelectStatementEqualTo(String value) {
            addCriterion("SELECT_STATEMENT =", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementNotEqualTo(String value) {
            addCriterion("SELECT_STATEMENT <>", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementGreaterThan(String value) {
            addCriterion("SELECT_STATEMENT >", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementGreaterThanOrEqualTo(String value) {
            addCriterion("SELECT_STATEMENT >=", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementLessThan(String value) {
            addCriterion("SELECT_STATEMENT <", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementLessThanOrEqualTo(String value) {
            addCriterion("SELECT_STATEMENT <=", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementLike(String value) {
            addCriterion("SELECT_STATEMENT like", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementNotLike(String value) {
            addCriterion("SELECT_STATEMENT not like", value, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementIn(List<String> values) {
            addCriterion("SELECT_STATEMENT in", values, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementNotIn(List<String> values) {
            addCriterion("SELECT_STATEMENT not in", values, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementBetween(String value1, String value2) {
            addCriterion("SELECT_STATEMENT between", value1, value2, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andSelectStatementNotBetween(String value1, String value2) {
            addCriterion("SELECT_STATEMENT not between", value1, value2, "selectStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementIsNull() {
            addCriterion("FROM_STATEMENT is null");
            return (Criteria) this;
        }

        public Criteria andFromStatementIsNotNull() {
            addCriterion("FROM_STATEMENT is not null");
            return (Criteria) this;
        }

        public Criteria andFromStatementEqualTo(String value) {
            addCriterion("FROM_STATEMENT =", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementNotEqualTo(String value) {
            addCriterion("FROM_STATEMENT <>", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementGreaterThan(String value) {
            addCriterion("FROM_STATEMENT >", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementGreaterThanOrEqualTo(String value) {
            addCriterion("FROM_STATEMENT >=", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementLessThan(String value) {
            addCriterion("FROM_STATEMENT <", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementLessThanOrEqualTo(String value) {
            addCriterion("FROM_STATEMENT <=", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementLike(String value) {
            addCriterion("FROM_STATEMENT like", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementNotLike(String value) {
            addCriterion("FROM_STATEMENT not like", value, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementIn(List<String> values) {
            addCriterion("FROM_STATEMENT in", values, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementNotIn(List<String> values) {
            addCriterion("FROM_STATEMENT not in", values, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementBetween(String value1, String value2) {
            addCriterion("FROM_STATEMENT between", value1, value2, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementNotBetween(String value1, String value2) {
            addCriterion("FROM_STATEMENT not between", value1, value2, "fromStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementIsNull() {
            addCriterion("WHERE_STATEMENT is null");
            return (Criteria) this;
        }

        public Criteria andWhereStatementIsNotNull() {
            addCriterion("WHERE_STATEMENT is not null");
            return (Criteria) this;
        }

        public Criteria andWhereStatementEqualTo(String value) {
            addCriterion("WHERE_STATEMENT =", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementNotEqualTo(String value) {
            addCriterion("WHERE_STATEMENT <>", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementGreaterThan(String value) {
            addCriterion("WHERE_STATEMENT >", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementGreaterThanOrEqualTo(String value) {
            addCriterion("WHERE_STATEMENT >=", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementLessThan(String value) {
            addCriterion("WHERE_STATEMENT <", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementLessThanOrEqualTo(String value) {
            addCriterion("WHERE_STATEMENT <=", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementLike(String value) {
            addCriterion("WHERE_STATEMENT like", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementNotLike(String value) {
            addCriterion("WHERE_STATEMENT not like", value, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementIn(List<String> values) {
            addCriterion("WHERE_STATEMENT in", values, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementNotIn(List<String> values) {
            addCriterion("WHERE_STATEMENT not in", values, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementBetween(String value1, String value2) {
            addCriterion("WHERE_STATEMENT between", value1, value2, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementNotBetween(String value1, String value2) {
            addCriterion("WHERE_STATEMENT not between", value1, value2, "whereStatement");
            return (Criteria) this;
        }

        public Criteria andOrderByIsNull() {
            addCriterion("ORDER_BY is null");
            return (Criteria) this;
        }

        public Criteria andOrderByIsNotNull() {
            addCriterion("ORDER_BY is not null");
            return (Criteria) this;
        }

        public Criteria andOrderByEqualTo(String value) {
            addCriterion("ORDER_BY =", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotEqualTo(String value) {
            addCriterion("ORDER_BY <>", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByGreaterThan(String value) {
            addCriterion("ORDER_BY >", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByGreaterThanOrEqualTo(String value) {
            addCriterion("ORDER_BY >=", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByLessThan(String value) {
            addCriterion("ORDER_BY <", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByLessThanOrEqualTo(String value) {
            addCriterion("ORDER_BY <=", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByLike(String value) {
            addCriterion("ORDER_BY like", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotLike(String value) {
            addCriterion("ORDER_BY not like", value, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByIn(List<String> values) {
            addCriterion("ORDER_BY in", values, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotIn(List<String> values) {
            addCriterion("ORDER_BY not in", values, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByBetween(String value1, String value2) {
            addCriterion("ORDER_BY between", value1, value2, "orderBy");
            return (Criteria) this;
        }

        public Criteria andOrderByNotBetween(String value1, String value2) {
            addCriterion("ORDER_BY not between", value1, value2, "orderBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterion("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterion("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterion("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterion("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterion("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterion("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY =", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <>", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThan(Long value) {
            addCriterion("LAST_UPDATED_BY >", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY >=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThan(Long value) {
            addCriterion("LAST_UPDATED_BY <", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY not in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andSelectStatementLikeInsensitive(String value) {
            addCriterion("upper(SELECT_STATEMENT) like", value.toUpperCase(), "selectStatement");
            return (Criteria) this;
        }

        public Criteria andFromStatementLikeInsensitive(String value) {
            addCriterion("upper(FROM_STATEMENT) like", value.toUpperCase(), "fromStatement");
            return (Criteria) this;
        }

        public Criteria andWhereStatementLikeInsensitive(String value) {
            addCriterion("upper(WHERE_STATEMENT) like", value.toUpperCase(), "whereStatement");
            return (Criteria) this;
        }

        public Criteria andOrderByLikeInsensitive(String value) {
            addCriterion("upper(ORDER_BY) like", value.toUpperCase(), "orderBy");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated do_not_delete_during_merge Wed Mar 20 11:18:05 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table BSE_LOOKUP_QUERIES
     *
     * @mbggenerated Wed Mar 20 11:18:05 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}