<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.id.fifgroup.core.finder.BatchUploadFinder">

	<resultMap type="co.id.fifgroup.core.domain.BatchUpload" id="BaseResultMap">
		<id column="BATCH_NUMBER" property="batchNumber" jdbcType="VARCHAR"/>
		<result column="COMPANY_ID" property="companyId" jdbcType="DECIMAL"/>
		<result column="BRANCH_ID" property="branchId" jdbcType="DECIMAL"/>
		<result column="FORMAT_REFERENCE_ID" property="formatReferenceId" jdbcType="DECIMAL"/>
		<result column="STATUS" property="status" jdbcType="VARCHAR"/>
		<result column="CREATED_BY" property="createdBy" jdbcType="DECIMAL"/>
		<result column="CREATION_DATE" property="creationDate" jdbcType="TIMESTAMP"/>
		<result column="LAST_UPDATED_BY" property="lastUpdatedBy" jdbcType="DECIMAL"/>
		<result column="UPDATED_BY" property="updatedBy" jdbcType="VARCHAR"/>
		<result column="LAST_UPDATE_DATE" property="lastUpdateDate" jdbcType="TIMESTAMP"/>
		<collection property="elements" columnPrefix="EL_" resultMap="uploadElementResult" />
	</resultMap>
	
	<resultMap type="co.id.fifgroup.core.domain.UploadElement" id="uploadElementResult">
		<id column="UPLOAD_ID" property="uploadId" jdbcType="NUMERIC" />
		<result column="UPLOAD_DATE" property="uploadDate" jdbcType="DATE" />
	</resultMap>

	<sql id="whereClause">
		<where>
			<if test="criteria.batchNumber != null">
				AND b.BATCH_NUMBER = #{criteria.batchNumber, jdbcType=VARCHAR}
			</if>
			<if test="criteria.companyId != null">
				AND b.COMPANY_ID = #{criteria.companyId, jdbcType=DECIMAL}
			</if>
			<if test="criteria.branchId != null">
				AND b.BRANCH_ID = #{criteria.branchId, jdbcType=DECIMAL}
			</if>
			<if test="criteria.formatReferenceId != null">
				AND b.FORMAT_REFERENCE_ID = #{criteria.formatReferenceId, jdbcType=DECIMAL}
			</if>
			<if test="criteria.status != null">
				AND b.STATUS = #{criteria.status, jdbcType=VARCHAR}
			</if>
			<if test="criteria.createdBy != null">
				AND b.CREATED_BY = #{criteria.createdBy, jdbcType=DECIMAL}
			</if>
			<if test="criteria.creationDate != null">
				AND b.CREATION_DATE = #{criteria.creationDate, jdbcType=TIMESTAMP}
			</if>
			<if test="criteria.lastUpdatedBy != null">
				AND b.LAST_UPDATED_BY = #{criteria.lastUpdatedBy, jdbcType=DECIMAL}
			</if>
			<if test="criteria.lastUpdateDate != null">
				AND b.LAST_UPDATE_DATE = #{criteria.lastUpdateDate, jdbcType=TIMESTAMP}
			</if>
			<if test="criteria.batchNumberFrom != null">
				<if test="!criteria.batchNumberFrom.trim().equals('')">
					AND b.BATCH_NUMBER &gt;= #{criteria.batchNumberFrom, jdbcType=VARCHAR}
				</if>
			</if>
			<if test="criteria.batchNumberTo != null">
				<if test="!criteria.batchNumberTo.trim().equals('')">
					AND b.BATCH_NUMBER &lt;= #{criteria.batchNumberTo, jdbcType=VARCHAR}
				</if>
			</if>
		</where>
	</sql>

	<insert id="insert" parameterType="map">
		INSERT INTO ${tableName} 
			(
				BATCH_NUMBER, COMPANY_ID, BRANCH_ID, FORMAT_REFERENCE_ID, STATUS, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE
			)
		VALUES
			(
				#{batchUpload.batchNumber, jdbcType=VARCHAR},
				#{batchUpload.companyId, jdbcType=DECIMAL},
				#{batchUpload.branchId, jdbcType=DECIMAL},
				#{batchUpload.formatReferenceId, jdbcType=DECIMAL},
				#{batchUpload.status, jdbcType=VARCHAR},
				#{batchUpload.createdBy, jdbcType=DECIMAL},
				#{batchUpload.creationDate, jdbcType=TIMESTAMP},
				#{batchUpload.lastUpdatedBy, jdbcType=DECIMAL},
				#{batchUpload.lastUpdateDate, jdbcType=TIMESTAMP}
			)
	</insert>

	<update id="updateById" parameterType="map">
		UPDATE ${tableName}
		SET
			COMPANY_ID = #{batchUpload.companyId, jdbcType=DECIMAL}, 
			BRANCH_ID = #{batchUpload.branchId, jdbcType=DECIMAL}, 
			FORMAT_REFERENCE_ID = #{batchUpload.formatReferenceId, jdbcType=DECIMAL}, 
			STATUS = #{batchUpload.status, jdbcType=VARCHAR}, 
			CREATED_BY = #{batchUpload.createdBy, jdbcType=DECIMAL}, 
			CREATION_DATE = #{batchUpload.creationDate, jdbcType=TIMESTAMP}, 
			LAST_UPDATED_BY = #{batchUpload.lastUpdatedBy, jdbcType=DECIMAL}, 
			LAST_UPDATE_DATE = #{batchUpload.lastUpdateDate, jdbcType=TIMESTAMP}
		WHERE
			BATCH_NUMBER = #{batchUpload.batchNumber, jdbcType=VARCHAR}
	</update>

	<select id="selectByExample" parameterType="map" resultMap="BaseResultMap">
		SELECT
			b.BATCH_NUMBER,
			b.COMPANY_ID, 
			b.BRANCH_ID, 
			b.FORMAT_REFERENCE_ID, 
			b.STATUS, 
			b.CREATED_BY, 
			b.CREATION_DATE, 
			b.LAST_UPDATED_BY, 
			u.USER_NAME UPDATED_BY,
			b.LAST_UPDATE_DATE,
			el.UPLOAD_ID EL_UPLOAD_ID,
			el.UPLOAD_DATE EL_UPLOAD_DATE
		FROM
			${batchUploadTable} b
		JOIN ${elementTable} el
			ON el.BATCH_NUMBER = b.BATCH_NUMBER
			<if test="criteria.processDateFrom != null and criteria.processDateTo != null">
				AND trunc(el.UPLOAD_DATE) between trunc(#{criteria.processDateFrom}) and trunc(#{criteria.processDateTo})
			</if>
		JOIN sam_users u
			ON u.user_id = b.last_updated_by
		<include refid="whereClause"/>
	</select>

	<select id="getBatchUploadByBatchNumber" parameterType="map" resultMap="BaseResultMap">
		SELECT
			BATCH_NUMBER, COMPANY_ID, BRANCH_ID, FORMAT_REFERENCE_ID, STATUS, CREATED_BY, CREATION_DATE, LAST_UPDATED_BY, LAST_UPDATE_DATE
		FROM
			${tableName}
		WHERE
			BATCH_NUMBER = #{batchNumber, jdbcType=VARCHAR}
	</select>

</mapper>