<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.id.fifgroup.ssoa.dao.StockOpnameMapper">
  <resultMap id="BaseResultMap" type="co.id.fifgroup.ssoa.dto.StockOpnameDTO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <id column="STOCK_OPNAME_ID" jdbcType="DECIMAL" property="id" />
	<result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
	<result column="START_DATE" jdbcType="DATE" property="startDate" />
	<result column="END_DATE" jdbcType="DATE" property="endDate" />
	<result column="SO_PERIOD_DTL_ID" jdbcType="VARCHAR" property="soPeriodDtlId" />
	<result column="BRANCH_ID" jdbcType="DECIMAL" property="branchId" />
	<result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
	<result column="STATUS_ID" jdbcType="DECIMAL" property="statusId" />
	<result column="STATUS_CODE" jdbcType="VARCHAR" property="statusCode" />
	<result column="STATUS" jdbcType="VARCHAR" property="status" />
	<result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
	<result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
	<result column="LAST_UPDATE_BY" jdbcType="DECIMAL" property="lastUpdateBy" />
	<result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
	<result column="NUMBER_OF_ASSETS_REG" jdbcType="DECIMAL"
		property="numberOfAssetReg" />
	<result column="NUMBER_OF_ASSETS_UNREG" jdbcType="DECIMAL"
		property="numberOfAssetUnReg" />
	<result column="NUMBER_OF_PROCESS_ASSETS_REG" jdbcType="DECIMAL"
		property="numberOfProcessAssetReg" />
	<result column="NUMBER_OF_PROCESS_ASSETS_UNREG" jdbcType="DECIMAL"
		property="numberOfProcessAssetUnReg" />
	<result column="NUMBER_OF_UNPROCESS_ASSETS_REG" jdbcType="DECIMAL"
		property="numberOfUnProcessAssetReg" />
	<result column="NUMBER_OF_UNPROCESS_UNREG" jdbcType="DECIMAL"
		property="numberOfUnProcessAssetUnReg" />
	<result column="SO_RESULT_FOUND_GOOD_USED" jdbcType="DECIMAL" property="SoResultFoundGoodUsed" />
	    <result column="SO_RESULT_FOUND_GOOD_NOT_USED" jdbcType="DECIMAL" property="SoResultFoundGoodNotUsed" />
	    <result column="SO_RESULT_FOUND_BROKEN" jdbcType="DECIMAL" property="SoResultFoundBroken" />
	    <result column="SO_RESULT_NOT_FOUND" jdbcType="DECIMAL" property="SoResultNotFound" />
	     <result column="REMARK" jdbcType="VARCHAR" property="remark" />
	 <result column="personUUID" property="personUUID" jdbcType="VARBINARY"
 								typeHandler="co.id.fifgroup.core.dao.mybatis.type.UUIDTypeHandler"/>
 	<result column="ASSET_ID" jdbcType="DECIMAL" property="assetId" />
 	<result column="ASSET_NUMBER" jdbcType="VARCHAR" property="assetNumber" />
 	<result column="BRANCH_ORIGIN" jdbcType="DECIMAL" property="branchOrigin" />
 	<result column="BRANCH_DESTINATION" jdbcType="DECIMAL" property="branchDestination" />
 	<result column="RESPONSIBILITY_ID" jdbcType="DECIMAL" property="responsibilityId" />
 	<result column="FUNCTION_ID" jdbcType="DECIMAL" property="functionId" />
 	<result column="MODULE_NAME" jdbcType="DECIMAL" property="moduleName" />
 	<result column="ACTION_URL" jdbcType="DECIMAL" property="actionUrl" />
  </resultMap>
  
  <resultMap type="co.id.fifgroup.core.ui.lookup.KeyValue" id="BaseResultMapKeyValue">
		<result column="KEY" property="key" javaType="java.lang.Object"/>
		<result column="VALUE" property="value" javaType="java.lang.Object"/>
		<result column="DESCRIPTION" property="description" javaType="java.lang.Object"/>
 </resultMap>
	
	
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="orderCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="example.orderCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    STOCK_OPNAME_ID, DESCRIPTION,START_DATE,END_DATE,BRANCH_ID,COMPANY_ID,SO_PERIOD_DTL_ID,STATUS_ID,STATUS_CODE,
    CREATED_BY, CREATION_DATE, LAST_UPDATE_BY, LAST_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_STOCK_OPNAME_HDR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_STOCK_OPNAME_HDR
    where STOCK_OPNAME_ID = #{id,jdbcType=DECIMAL}
  </select>
  
  <select id="getDetailAsset" parameterType="java.lang.Long" resultMap="BaseResultMap">
	   SELECT soh.stock_opname_id,
	       a.asset_number,
	       a.asset_id,
	       soh.branch_id AS branch_origin,
	       soua.branch_id AS branch_destination
	 	 FROM soc_assets a
		       INNER JOIN SOC_STOCK_OPNAME_UNREG_ASSETS soua
		          ON soua.asset_id = a.asset_id
		       INNER JOIN SOC_STOCK_OPNAME_HDR soh
		          ON soh.stock_opname_id = soua.stock_opname_id
		 WHERE soh. STOCK_OPNAME_ID = #{id,jdbcType=DECIMAL}
  </select>
  
   <select id="getAssetNumber" parameterType="java.lang.Long" resultMap="BaseResultMap">
	   SELECT soh.stock_opname_id,
	       a.asset_number,
	       a.asset_id
	 	 FROM soc_assets a
		 WHERE BRANCH_ID = #{branchDestination,jdbcType=DECIMAL}
  </select>
  
  <select id="selectByAvmTrxId" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT DISTINCT
		HD.STOCK_OPNAME_ID, DESCRIPTION,START_DATE,END_DATE,BRANCH_ID,SO_PERIOD_DTL_ID,HD.STATUS_ID,HD.STATUS_CODE,
		HD.CREATED_BY,
		HD.CREATION_DATE,
		HD.LAST_UPDATE_DATE,
		HD.LAST_UPDATE_BY,
		U.USER_NAME,
		(Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id)  NUMBER_OF_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id
        )  NUMBER_OF_ASSETS_UNREG,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_GOOD_USED')  SO_RESULT_FOUND_GOOD_USED,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_GOOD_NOT_USED')  SO_RESULT_FOUND_GOOD_NOT_USED,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_BROKEN')  SO_RESULT_FOUND_BROKEN,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_NOT_FOUND')  SO_RESULT_NOT_FOUND,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and sod.opname_result_code is not null ) NUMBER_OF_PROCESS_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id and sou.opname_result_code is not null and sou.opname_sugest_code is not null
        ) NUMBER_OF_PROCESS_ASSETS_UNREG,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and (sod.opname_result_code is null ))NUMBER_OF_UNPROCESS_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id and (sou.opname_result_code is  null or sou.opname_sugest_code is  null)
        ) NUMBER_OF_UNPROCESS_UNREG,
        R.REMARK
		FROM
		SOC_STOCK_OPNAME_HDR HD
		INNER JOIN SOC_STOCK_OPNAME_REPORTING R ON HD.STOCK_OPNAME_ID = R.STOCK_OPNAME_ID
		LEFT JOIN SAM_USERS U ON U.USER_ID =
		HD.LAST_UPDATE_BY
	    where AVM_TRX_ID = #{avmTrxId,jdbcType=VARCHAR}
	    AND ROWNUM = 1
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    delete from SOC_STOCK_OPNAME_HDR
    where STOCK_OPNAME_ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select SOC_STOCK_OPNAME_HDR_S.nextVal from dual
    </selectKey>
    insert into SOC_STOCK_OPNAME_HDR (STOCK_OPNAME_ID, DESCRIPTION, START_DATE, END_DATE,BRANCH_ID,COMPANY_ID,SO_PERIOD_DTL_ID,STATUS_ID,STATUS_CODE,
      CREATED_BY, CREATION_DATE, LAST_UPDATE_BY, 
      LAST_UPDATE_DATE)
    values (#{id,jdbcType=DECIMAL}, #{description,jdbcType=VARCHAR},#{startDate,jdbcType=DATE},#{endDate,jdbcType=DATE},#{branchId,jdbcType=DECIMAL},#{companyId,jdbcType=DECIMAL},#{soPeriodDtlId,jdbcType=VARCHAR},#{statusId,jdbcType=DECIMAL},#{statusCode,jdbcType=VARCHAR},
      #{createdBy,jdbcType=DECIMAL}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=DECIMAL}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    insert into SOC_STOCK_OPNAME_HDR
    <trim prefix="(" suffix=")" suffixOverrides=",">
      STOCK_OPNAME_ID,
      <if test="description != null">
        DESCRIPTION,
      </if>
      <if test="createdBy != null">
        CREATED_BY,
      </if>
      <if test="creationDate != null">
        CREATION_DATE,
      </if>
      <if test="lastUpdateBy != null">
        LAST_UPDATE_BY,
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="lastUpdateBy != null">
        #{lastUpdateBy,jdbcType=DECIMAL},
      </if>
      <if test="lastUpdateDate != null">
        #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select count(*) from SOC_STOCK_OPNAME_HDR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_STOCK_OPNAME_HDR
    <set>
     
      <if test="record.description != null">
        DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.lastUpdateBy != null">
        LAST_UPDATE_BY = #{record.lastUpdateBy,jdbcType=DECIMAL},
      </if>
      <if test="record.lastUpdateDate != null">
        LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_STOCK_OPNAME_HDR
    set 
      DESCRIPTION = #{record.description,jdbcType=VARCHAR},
      LAST_UPDATE_BY = #{record.lastUpdateBy,jdbcType=DECIMAL},
      LAST_UPDATE_DATE = #{record.lastUpdateDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_STOCK_OPNAME_HDR
    <set>
      <if test="description != null">
        DESCRIPTION = #{description,jdbcType=VARCHAR},
      </if>
      
      <if test="statusId != null">
        STATUS_ID = #{statusId,jdbcType=DECIMAL},
      </if>
      
      <if test="statusCode != null">
        STATUS_CODE = #{statusCode,jdbcType=VARCHAR},
      </if>
      
      <if test="lastUpdateBy != null">
        LAST_UPDATE_BY = #{lastUpdateBy,jdbcType=DECIMAL},
      </if>
      <if test="lastUpdateDate != null">
        LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where STOCK_OPNAME_ID = #{id,jdbcType=DECIMAL}
  </update>
  
   <update id="updateSOPeriodDetailStatus" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_SO_PERIOD_DTL
    set STATUS_CODE = #{statusCode,jdbcType=VARCHAR},
      	STATUS_ID = #{statusId,jdbcType=DECIMAL}
    where SO_PERIOD_DTL_ID = #{soPeriodDtlId,jdbcType=DECIMAL}
  </update>
  
  <update id="updateCountStatus" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
	    <!--
	      WARNING - @mbggenerated
	      This element is automatically generated by MyBatis Generator, do not modify.
	      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
	    -->
	    UPDATE soc_so_period_hdr hd
   			SET not_started_branch =
	          (SELECT COUNT (so_period_dtl_id)
	             FROM soc_so_period_dtl pd
	            WHERE pd.status_code = 'SO_STATUS_NOT_STARTED'
	                  AND hd.SO_PERIOD_ID = pd.SO_PERIOD_ID),
	       in_process_branch =
	          (SELECT COUNT (so_period_dtl_id)
	             FROM soc_so_period_dtl pd
	            WHERE     pd.status_code = 'SO_STATUS_ON_PROGRESS'
					  AND hd.SO_PERIOD_ID = pd.SO_PERIOD_ID),
	       submit_branch =
	          (SELECT COUNT (so_period_dtl_id)
	             FROM soc_so_period_dtl pd
	            WHERE     pd.status_code = 'SO_STATUS_SUBMIT'
	                  AND hd.SO_PERIOD_ID = pd.SO_PERIOD_ID),
	       approved_branch =
	          (SELECT COUNT (so_period_dtl_id)
	             FROM soc_so_period_dtl pd
	            WHERE     pd.status_code = 'SO_STATUS_APPROVED'
	                  AND hd.SO_PERIOD_ID = pd.SO_PERIOD_ID),
	       closed_branch =
	          (SELECT COUNT (so_period_dtl_id)
	             FROM soc_so_period_dtl pd
	            WHERE     pd.status_code = 'SO_STATUS_CLOSED'
	                  AND hd.SO_PERIOD_ID = pd.SO_PERIOD_ID)
  	</update>
  
  <update id="updateByPrimaryKey" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_STOCK_OPNAME_HDR
    set DESCRIPTION = #{description,jdbcType=VARCHAR},
      LAST_UPDATE_BY = #{lastUpdateBy,jdbcType=DECIMAL},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where STOCK_OPNAME_ID = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByExampleWithRowbounds" parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_STOCK_OPNAME_HDR
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="getLookupKeyValues" parameterType="map" resultMap="BaseResultMapKeyValue">
		SELECT 
		    bld.LOOKUP_ID KEY,
			bld.DETAIL_CODE VALUE,
			bld.DESCRIPTION DESCRIPTION
		FROM bse_lookup_hdr blh
    	join BSE_LOOKUP_DEPENDENTS bld on bld.lookup_id = blh.lookup_id
		WHERE
      		UPPER(blh.name) = UPPER(#{lookupName})
      	<if test="key != null">
			AND	UPPER(bld.DETAIL_CODE) = UPPER(#{key})      	
      	</if>
      	ORDER BY bld.SEQ_NUMBER ASC
	</select>
	
  <select id="getLastSONo" parameterType="java.lang.String" resultMap="BaseResultMap">
   select REPORT_NO from(select REPORT_NO, rownum rowNumber from SOC_STOCK_OPNAME_REPORTING order by STOCK_OPNAME_REPORTING_ID desc) where rowNumber =1
  </select>
  
  <select id="getOnePersonByBranchId" parameterType="java.lang.Long"  resultMap="BaseResultMap" >
	SELECT 
       p.person_uuid personUUID
  FROM pea_people p
       JOIN pea_people_types t ON p.person_id = t.person_id
       JOIN pea_personal_informations i
          ON i.person_id = p.person_id AND i.company_id = t.company_id
       JOIN pea_primary_assignments a
          ON a.person_id = p.person_id AND a.company_id = t.company_id
       LEFT JOIN bse_companies c ON c.company_id = t.company_id
       LEFT JOIN wos_jobs jb ON jb.job_id = a.job_id
       LEFT JOIN wos_job_versions jobv ON jobv.job_id = jb.job_id
       LEFT JOIN wos_organizations org
          ON org.organization_id = a.organization_id
       LEFT JOIN wos_organization_versions orgv
          ON orgv.organization_id = org.organization_id
       LEFT JOIN wos_locations loc ON loc.location_id = orgv.location_id
       LEFT JOIN wos_grades grade ON grade.grade_id = a.grade_id
       LEFT JOIN wos_grade_versions gradev
          ON     gradev.grade_id = a.grade_id
             AND sysdate BETWEEN gradev.date_from AND gradev.date_to
       LEFT JOIN BRANCH_HIERARCHY_V bh
          ON bh.organization_id = a.organization_id
       LEFT JOIN wos_locations l
          ON     l.location_code = i.home_base_code
             AND l.company_id = t.company_id
       LEFT JOIN pea_assignment_other_info paoi
          ON paoi.assignment_id = a.assignment_id
       LEFT JOIN sam_users su ON (su.user_id = p.last_updated_by)
 WHERE  trunc(sysdate) &gt;= t.effective_start_date 
			and trunc(sysdate) &lt;= t.effective_end_date
			and trunc(sysdate) &gt;= i.effective_start_date 
			and trunc(sysdate) &lt;= i.effective_end_date 
			and trunc(sysdate) &gt;= a.effective_start_date 
			and trunc(sysdate) &lt;= a.effective_end_date
			and trunc(sysdate) &gt;= c.effective_start_date 
			and trunc(sysdate) &lt;= c.effective_end_date
			and trunc(sysdate) &gt;= orgv.date_from
			and trunc(sysdate) &lt;= orgv.date_to
			and trunc(sysdate) &gt;= jobv.date_from
			and trunc(sysdate) &lt;= jobv.date_to	
       AND t.people_type = 'EMPLOYEE'
       and bh.branch_id = #{branchId,jdbcType=DECIMAL}
       and t.company_id = #{companyId,jdbcType=DECIMAL}
       and rownum = 1
  </select>
  <select id="countIsSugest" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select count(1) from soc_stock_opname_hdr h 
	where h.stock_opname_id = #{id,jdbcType=DECIMAL}
	and (stock_opname_id in ( select stock_opname_id from soc_stock_opname_dtl d where stock_opname_id = h.stock_opname_id  and d.opname_sugest_code is not null)
    or stock_opname_id in ( select stock_opname_id from SOC_STOCK_OPNAME_UNREG_ASSETS d where stock_opname_id = h.stock_opname_id  and d.opname_sugest_code is not null))
  </select>
  
  <select id="countIsSONotClosed" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select count(1) from soc_stock_opname_hdr h 
    where h.status_code &lt;&gt; 'SO_STATUS_CLOSED' and branch_id = #{branchId,jdbcType=DECIMAL} and company_id = #{companyId,jdbcType=DECIMAL}
  </select>
  
  <select id="countIsTransferNotClosed" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select count(1) from SOC_TRANSFER_HDR
    where status_code &lt;&gt; 'ASSET_TRANSFER_COMPLETED'
    and branch_id = #{branchId,jdbcType=DECIMAL} and company_id = #{companyId,jdbcType=DECIMAL}
  </select>
  
  <select id="countIsRetirementNotClosed" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT count(1) FROM SOC_RETIREMENT_HDR h 
	WHERE  
	(retirement_type_code IN ('RETIREMENT_TYPE_GRANT','RETIREMENT_TYPE_SELL')  OR (status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' AND status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED')) 
	AND (retirement_type_code NOT IN ('RETIREMENT_TYPE_GRANT','RETIREMENT_TYPE_SELL') OR (bast_status_code IS NULL OR (bast_status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' AND bast_status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED')))
	AND branch_id = #{branchId,jdbcType=DECIMAL} and company_id = #{companyId,jdbcType=DECIMAL}
  </select>
  
  <select id="countActionStatusNotStartedBySOId" parameterType="java.lang.Long" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select sum(a) from(
	select count(1) a  from soc_stock_opname_dtl where stock_opname_id = #{soId,jdbcType=DECIMAL} and opname_action_status_code = 'SO_ACTION_NOT_STARTED'
	union all
	select count(1) a from SOC_STOCK_OPNAME_UNREG_ASSETS where stock_opname_id = #{soId,jdbcType=DECIMAL} and opname_action_status_code = 'SO_ACTION_NOT_STARTED'
    )
  </select>
  
  <select id="selectSOIdbyAssetIdAndActionStatusNotStarted" parameterType="java.lang.Long" resultType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select stock_opname_id from soc_stock_opname_dtl where asset_id =#{assetId,jdbcType=DECIMAL} and opname_action_status_code = 'SO_ACTION_NOT_STARTED'
	union all
	select stock_opname_id a from SOC_STOCK_OPNAME_UNREG_ASSETS where asset_id = #{assetId,jdbcType=DECIMAL} and opname_action_status_code = 'SO_ACTION_NOT_STARTED'
  </select>
  
  <select id="getSOForNotification" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from soc_stock_opname_hdr where  status_code in('SO_STATUS_ON_PROGRESS','SO_STATUS_NOT_STARTED') and (TRUNC(SYSDATE) = (TRUNC(START_DATE)+7) OR TRUNC(SYSDATE) = (TRUNC(START_DATE)+14))
  </select>
  
  <select id="getNotificationMessageByName" parameterType="java.lang.String" resultType="java.lang.Long">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select template_id from NTF_TEMPLATE_MESSAGE where template_name = #{name,jdbcType=VARCHAR}  and rownum = 1
  </select>
  
  <select id="getPersonByPersonId" parameterType="java.lang.Long"  resultMap="BaseResultMap" >
      select PERSON_UUID personUUID from PEA_PEOPLE where person_id = #{personId,jdbcType=DECIMAL} and rownum = 1
  </select>
  
  <select id="getResponsibilityIdSO" parameterType="map" resultMap="BaseResultMap">
	SELECT sr.responsibility_id , sf.function_id ,module_name,action_url
      FROM SAM_FUNCTIONS sf
           INNER JOIN SAM_MENU_DTL smd ON SF.FUNCTION_ID = SMD.ACTION_ID
           INNER JOIN sam_responsibilities sr ON sr.menu_id = smd.menu_id
           INNER JOIN BSE_MODULES bm on bm.module_id = sf.module_id
     WHERE action_url LIKE '%stock_opname.zul%' AND ROWNUM = 1
	</select>
	
	<select id="getResponsibilityIdAT" parameterType="map" resultMap="BaseResultMap">
	SELECT sr.responsibility_id , sf.function_id ,module_name,action_url
      FROM SAM_FUNCTIONS sf
           INNER JOIN SAM_MENU_DTL smd ON SF.FUNCTION_ID = SMD.ACTION_ID
           INNER JOIN sam_responsibilities sr ON sr.menu_id = smd.menu_id
           INNER JOIN BSE_MODULES bm on bm.module_id = sf.module_id
     WHERE action_url LIKE '%asset_transfer.zul%' AND ROWNUM = 1
	</select>
</mapper>