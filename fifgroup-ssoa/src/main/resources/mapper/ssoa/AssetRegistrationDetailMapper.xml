<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.id.fifgroup.ssoa.dao.AssetRegistrationDetailMapper">
  <resultMap id="BaseResultMap" type="co.id.fifgroup.ssoa.dto.AssetRegistrationDetailDTO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <id column="REGISTRATION_DTL_ID" jdbcType="DECIMAL" property="registrationDtlId" />
    <result column="REGISTRATION_ID" jdbcType="DECIMAL" property="registrationId" />
    <result column="STOCK_OPNAME_UNREG_ASSET_ID" jdbcType="DECIMAL" property="stockOpnameUnregAssetId" />
    <result column="ASSET_ID" jdbcType="DECIMAL" property="assetId" />
    <result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
    <result column="LAST_UPDATE_BY" jdbcType="DECIMAL" property="lastUpdateBy" />
    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
    <result column="BRANCH_ID" jdbcType="DECIMAL" property="branchId" />
    
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
	    REGISTRATION_DTL_ID,
	    REGISTRATION_ID,
	    STOCK_OPNAME_UNREG_ASSET_ID, 
	    CREATED_BY, 
	    CREATION_DATE, 
	    LAST_UPDATE_BY, 
	    LAST_UPDATE_DATE
  </sql>
  <select id="selectByExample" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_REGISTRATION_DTL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_REGISTRATION_DTL
    where REGISTRATION_DTL_ID = #{registrationDtlId,jdbcType=DECIMAL}
  </select>
  
  <select id="selectByHeaderKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    REGISTRATION_DTL_ID,
    AR.BRANCH_ID,
    AR.REGISTRATION_ID,
    STOCK_OPNAME_UNREG_ASSET_ID, 
    A.ASSET_ID,
    AD.CREATED_BY, 
    AD.CREATION_DATE, 
    AD.LAST_UPDATE_BY, 
    AD.LAST_UPDATE_DATE
    from SOC_REGISTRATION_DTL AD
    inner join SOC_REGISTRATION_HDR AR on ar.registration_id= ad.registration_id 
    left join SOC_ASSETS A on ad.stock_opname_unreg_asset_id = A.asset_id
    left join SOC_EBS_CATEGORIES C on A.category_id = C.category_id
    left join SOC_ACCOUNT AC on C.segment1 = AC.ASSET_CATEGORIES
    where ar.registration_ID = #{registrationId,jdbcType=DECIMAL}
  </select>
  
  
  <resultMap id="detailAssets" type="co.id.fifgroup.ssoa.dto.AssetRegistrationDetailDTO">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Feb 27 
			20:51:34 ICT 2013. -->
		  <id column="ASSET_ID" jdbcType="DECIMAL"
			property="assetId" />
		<result column="EBS_ASSET_ID" jdbcType="DECIMAL" property="ebsAssetId" />
        <result column="ASSET_NUMBER" jdbcType="VARCHAR" property="assetNumber" />
		<result column="TAG_NUMBER" jdbcType="DECIMAL" property="tagNumber" />
		<result column="SERIAL_NUMBER" jdbcType="VARCHAR" property="serialNumber" />
		<result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
		<result column="CATEGORY_ID" jdbcType="DECIMAL" property="categoryId" />
		<result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
		<result column="BRANCH_ID" jdbcType="DECIMAL" property="branchId" />
		<result column="BRANCH_CODE" jdbcType="VARCHAR" property="branchCode" />
		<result column="BRANCH_NAME" jdbcType="VARCHAR" property="branchName" />
		<result column="LOCATION_ID" jdbcType="VARCHAR" property="locationId" />
		<result column="LOCATION_CODE" jdbcType="VARCHAR" property="locationCode" />
		<result column="LOCATION_NAME" jdbcType="VARCHAR" property="locationName" />
		<result column="POSITION" jdbcType="VARCHAR" property="position" />
		
		<result column="DATE_PLACED_IN_SERVICE" jdbcType="DATE" property="datePlacedInService" />
		<result column="LIFE_IN_MONTHS" jdbcType="DECIMAL" property="lifeInMonths" />
		
		<result column="ORIGINAL_COST" jdbcType="DECIMAL" property="originalCost" />
		<result column="UNREVALUED_COST" jdbcType="DECIMAL" property="unrevaluedCost" />
		<result column="BOOK_TYPE_CODE" jdbcType="VARCHAR" property="bookTypeCode" />
		<result column="LAST_PRINTED_DATE" jdbcType="TIMESTAMP" property="lastPrintedDate" />
		<result column="PRINTED_COUNT" jdbcType="DECIMAL" property="printedCount" />
		<result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
		<result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
		<result column="LAST_UPDATE_BY" jdbcType="DECIMAL" property="lastUpdateBy" />
		<result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
		<result column="STOCK_OPNAME_DTL_ID" jdbcType="DECIMAL" property="stockOpnameDtlId" />
		<result column="LOCATION_NAME" jdbcType="VARCHAR" property="locationName" />
		<result column="SO_RESULT" jdbcType="VARCHAR" property="stockOpnameResult" />
		<result column="SO_SUGEST" jdbcType="VARCHAR" property="stockOpnameSugest" />
		<result column="SO_HO_SUGEST" jdbcType="VARCHAR" property="stockOpnameHoSugest" />
		<result column="STOCK_OPNAME_DETAIL_ID" jdbcType="VARCHAR" property="stockOpnameDtlId" />
		<result column="STOCK_OPNAME_UNREG_ASSET_ID" jdbcType="DECIMAL" property="stockOpnameUnregAssetId" />
		<result column="ASSET_TYPE_NAME" jdbcType="VARCHAR" property="assetTypeName" />
		<result column="CATEGORY_NAME" jdbcType="VARCHAR" property="categoryName" />
  </resultMap>
  
    <select id="selectDetailByHeaderId" resultMap="detailAssets"
		parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample">
		SELECT DISTINCT
	        A.ASSET_ID,
         A.ASSET_TYPE_CODE,
         (SELECT description
            FROM bse_lookup_dependents
           WHERE detail_code = A.ASSET_TYPE_CODE)
            AS ASSET_TYPE_NAME,
         (SELECT segment1
            FROM SOC_EBS_CATEGORIES
           WHERE category_id = A.CATEGORY_ID)
            AS CATEGORY_NAME,
         A.TAG_NUMBER,
         A.SERIAL_NUMBER,
         A.DESCRIPTION,
         A.CATEGORY_ID,
         A.COMPANY_ID,
         A.BRANCH_ID,
         (CASE
             WHEN A.BRANCH_ID = -1
             THEN
                'HEADOFFICE'
             ELSE
                (SELECT SUBSTR (ORGANIZATION_CODE, -5) AS branch_code
                   FROM WOS_ORGANIZATIONS
                  WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
          END)
            BRANCH_CODE,
         (CASE
             WHEN A.BRANCH_ID = -1
             THEN
                'Head Office'
             ELSE
                (SELECT ORGANIZATION_NAME
                   FROM WOS_ORGANIZATIONS
                  WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
          END)
            BRANCH_NAME,
         A.LOCATION_ID,
         (SELECT LOCATION_CODE
            FROM WOS_LOCATIONS
           WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
            LOCATION_CODE,
         (SELECT LOCATION_NAME
            FROM WOS_LOCATIONS
           WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
            LOCATION_NAME,
         A.POSITION,
         A.DATE_PLACED_IN_SERVICE,
         A.LIFE_IN_MONTHS,
         A.ORIGINAL_COST,
         A.UNREVALUED_COST,
         A.BOOK_TYPE_CODE,
         A.CREATED_BY,
         A.CREATION_DATE,
         A.LAST_UPDATE_BY,
         A.LAST_UPDATE_DATE,
         (SELECT description
            FROM BSE_LOOKUP_DEPENDENTS
           WHERE     DETAIL_CODE =
                        (SELECT OPNAME_RESULT_CODE
                           FROM SOC_STOCK_OPNAME_DTL SD
                                INNER JOIN SOC_STOCK_OPNAME_HDR HD
                                   ON     SD.STOCK_OPNAME_ID =
                                             HD.STOCK_OPNAME_ID
                                      AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                          WHERE SD.ASSET_ID = A.ASSET_ID AND ROWNUM = 1)
                 AND ROWNUM = 1)
            AS SO_RESULT,
         (SELECT description
            FROM BSE_LOOKUP_DEPENDENTS
           WHERE     DETAIL_CODE =
                        (SELECT OPNAME_SUGEST_CODE
                           FROM SOC_STOCK_OPNAME_DTL SD
                                INNER JOIN SOC_STOCK_OPNAME_HDR HD
                                   ON     SD.STOCK_OPNAME_ID =
                                             HD.STOCK_OPNAME_ID
                                      AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                          WHERE SD.ASSET_ID = A.ASSET_ID AND ROWNUM = 1)
                 AND ROWNUM = 1)
            AS SO_SUGEST,
         (SELECT description
            FROM BSE_LOOKUP_DEPENDENTS
           WHERE     DETAIL_CODE =
                        (SELECT OPNAME_HO_SUGEST_CODE
                           FROM SOC_STOCK_OPNAME_DTL SD
                                INNER JOIN SOC_STOCK_OPNAME_HDR HD
                                   ON     SD.STOCK_OPNAME_ID =
                                             HD.STOCK_OPNAME_ID
                                      AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                          WHERE SD.ASSET_ID = A.ASSET_ID AND ROWNUM = 1)
                 AND ROWNUM = 1)
            AS SO_HO_SUGEST,
         (SELECT STOCK_OPNAME_DTL_ID
            FROM SOC_STOCK_OPNAME_DTL SD
                 INNER JOIN SOC_STOCK_OPNAME_HDR HD
                    ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
                       AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
           WHERE SD.ASSET_ID = A.ASSET_ID AND ROWNUM = 1)
            STOCK_OPNAME_DTL_ID
    FROM SOC_STOCK_OPNAME_UNREG_ASSETS A
         INNER JOIN SOC_REGISTRATION_DTL AD
            ON AD.STOCK_OPNAME_UNREG_ASSET_ID = A.STOCK_OPNAME_UNREG_ASSET_ID
         INNER JOIN SOC_REGISTRATION_HDR AR
            ON AR.REGISTRATION_ID = AD.REGISTRATION_ID
 		<where>
			AR.REGISTRATION_ID = #{example.id,jdbcType=DECIMAL}
		</where>
		ORDER BY
		 A.LAST_UPDATE_DATE ASC
	</select>

  
 
  
  <insert id="insert" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <selectKey keyProperty="registrationDtlId" order="BEFORE" resultType="java.lang.Long">
      select SOC_REGISTRATION_DTL_S.nextVal from dual
    </selectKey>
    
    insert into SOC_Registration_DTL (
    	REGISTRATION_DTL_ID,
    	REGISTRATION_ID,
    	STOCK_OPNAME_UNREG_ASSET_ID,
      	CREATED_BY, 
      	CREATION_DATE, 
      	LAST_UPDATE_BY, 
      	LAST_UPDATE_DATE)
    values (
    	#{registrationDtlId,jdbcType=DECIMAL},
    	#{registrationId,jdbcType=DECIMAL},
    	#{stockOpnameUnregAssetId,jdbcType=DECIMAL},
      	#{createdBy,jdbcType=DECIMAL}, 
      	#{creationDate,jdbcType=TIMESTAMP}, 
      	#{lastUpdateBy,jdbcType=DECIMAL}, 
      	#{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>
 
  <select id="countByExample" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select count(*) from SOC_REGISTRATION_DTL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  

  <update id="updateByPrimaryKey" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetail">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_REGISTRATION_DTL
    set STOCK_OPNAME_UNREG_ASSET_ID = #{stockOpnameUnregAssetId,jdbcType=DECIMAL},
      CREATED_BY = #{createdBy,jdbcType=DECIMAL},
      CREATION_DATE = #{creationDate,jdbcType=TIMESTAMP},
      LAST_UPDATE_BY = #{lastUpdateBy,jdbcType=DECIMAL},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where REGISTRATION_DTL_ID = #{registrationId,jdbcType=DECIMAL}
  </update>
  
  <select id="selectByExampleWithRowbounds" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_REGISTRATION_DTL
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="selectAssetSODtlByCriteria" resultMap="detailAssets"
		parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample">
		
	 SELECT DISTINCT A.*
    FROM (SELECT DISTINCT
                 A.STOCK_OPNAME_UNREG_ASSET_ID,
                 A.ASSET_ID,
                 A.ASSET_TYPE_CODE,
                 (SELECT description
                    FROM bse_lookup_dependents
                   WHERE detail_code = A.ASSET_TYPE_CODE)
                    AS ASSET_TYPE_NAME,
                 (SELECT segment1
                    FROM SOC_EBS_CATEGORIES
                   WHERE category_id = A.CATEGORY_ID)
                    AS CATEGORY_NAME,
                 A.TAG_NUMBER,
                 A.SERIAL_NUMBER,
                 A.DESCRIPTION,
                 A.CATEGORY_ID,
                 A.COMPANY_ID,
                 A.BRANCH_ID,
                 (CASE
                     WHEN A.BRANCH_ID = -1
                     THEN
                        'HEADOFFICE'
                     ELSE
                        (SELECT SUBSTR (ORGANIZATION_CODE, -5) AS branch_code
                           FROM WOS_ORGANIZATIONS
                          WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
                  END)
                    BRANCH_CODE,
                 (CASE
                     WHEN A.BRANCH_ID = -1
                     THEN
                        'Head Office'
                     ELSE
                        (SELECT ORGANIZATION_NAME
                           FROM WOS_ORGANIZATIONS
                          WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
                  END)
                    BRANCH_NAME,
                 A.LOCATION_ID,
                 (SELECT LOCATION_CODE
                    FROM WOS_LOCATIONS
                   WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
                    LOCATION_CODE,
                 (SELECT LOCATION_NAME
                    FROM WOS_LOCATIONS
                   WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
                    LOCATION_NAME,
                 A.POSITION,
                 A.DATE_PLACED_IN_SERVICE,
                 A.LIFE_IN_MONTHS,
                 A.ORIGINAL_COST,
                 A.UNREVALUED_COST,
                 A.BOOK_TYPE_CODE,
                 A.CREATED_BY,
                 A.CREATION_DATE,
                 A.LAST_UPDATE_BY,
                 A.LAST_UPDATE_DATE,
                 (SELECT bld.description SO_SUGEST
                    FROM SOC_STOCK_OPNAME_DTL SD
                         INNER JOIN SOC_STOCK_OPNAME_HDR HD
                            ON     HD.STOCK_OPNAME_ID = SD.STOCK_OPNAME_ID
                               AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                         INNER JOIN BSE_LOOKUP_DEPENDENTS bld
                            ON bld.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
                   WHERE     SD.ASSET_ID = A.ASSET_ID
                         AND hd.branch_id = A.branch_id
                         AND hd.company_id = A.company_id
                         AND ROWNUM = 1)
                    SO_SUGEST
            FROM SOC_STOCK_OPNAME_UNREG_ASSETS A
                 INNER JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
           WHERE A.STOCK_OPNAME_UNREG_ASSET_ID NOT IN (SELECT STOCK_OPNAME_UNREG_ASSET_ID
                                      FROM soc_registration_dtl ad
                                           INNER JOIN soc_registration_hdr ar
                                              ON ar.registration_id =
                                                    ad.registration_id
                                     WHERE     ar.branch_id = A.branch_id
                                           AND ar.status_code IN ('ASSET_REGISTRATION_APPROVED',
                                                                  'ASSET_REGISTRATION_INPROCESS')))A
	 <if test="_parameter != null">
            <include refid="Example_Where_Clause" />
       </if>
        and A.asset_id is null
	<if test="orderByClause != null">
             order by ${orderByClause}
    	</if>
	</select>
  
  <select id="countAssetSODtlByCriteria" parameterType="co.id.fifgroup.ssoa.domain.AssetRegistrationDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT count(1) FROM(
		SELECT DISTINCT
                 A.STOCK_OPNAME_UNREG_ASSET_ID,
                 A.ASSET_ID,
                 A.ASSET_TYPE_CODE,
                 (SELECT description
                    FROM bse_lookup_dependents
                   WHERE detail_code = A.ASSET_TYPE_CODE)
                    AS ASSET_TYPE_NAME,
                 (SELECT segment1
                    FROM SOC_EBS_CATEGORIES
                   WHERE category_id = A.CATEGORY_ID)
                    AS CATEGORY_NAME,
                 A.TAG_NUMBER,
                 A.SERIAL_NUMBER,
                 A.DESCRIPTION,
                 A.CATEGORY_ID,
                 A.COMPANY_ID,
                 A.BRANCH_ID,
                 (CASE
                     WHEN A.BRANCH_ID = -1
                     THEN
                        'HEADOFFICE'
                     ELSE
                        (SELECT SUBSTR (ORGANIZATION_CODE, -5) AS branch_code
                           FROM WOS_ORGANIZATIONS
                          WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
                  END)
                    BRANCH_CODE,
                 (CASE
                     WHEN A.BRANCH_ID = -1
                     THEN
                        'Head Office'
                     ELSE
                        (SELECT ORGANIZATION_NAME
                           FROM WOS_ORGANIZATIONS
                          WHERE ORGANIZATION_ID = A.BRANCH_ID AND ROWNUM = 1)
                  END)
                    BRANCH_NAME,
                 A.LOCATION_ID,
                 (SELECT LOCATION_CODE
                    FROM WOS_LOCATIONS
                   WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
                    LOCATION_CODE,
                 (SELECT LOCATION_NAME
                    FROM WOS_LOCATIONS
                   WHERE LOCATION_ID = A.LOCATION_ID AND ROWNUM = 1)
                    LOCATION_NAME,
                 A.POSITION,
                 A.DATE_PLACED_IN_SERVICE,
                 A.LIFE_IN_MONTHS,
                 A.ORIGINAL_COST,
                 A.UNREVALUED_COST,
                 A.BOOK_TYPE_CODE,
                 A.CREATED_BY,
                 A.CREATION_DATE,
                 A.LAST_UPDATE_BY,
                 A.LAST_UPDATE_DATE,
                 (SELECT bld.description SO_SUGEST
                    FROM SOC_STOCK_OPNAME_DTL SD
                         INNER JOIN SOC_STOCK_OPNAME_HDR HD
                            ON     HD.STOCK_OPNAME_ID = SD.STOCK_OPNAME_ID
                               AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                         INNER JOIN BSE_LOOKUP_DEPENDENTS bld
                            ON bld.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
                   WHERE     SD.ASSET_ID = A.ASSET_ID
                         AND hd.branch_id = A.branch_id
                         AND hd.company_id = A.company_id
                         AND ROWNUM = 1)
                    SO_SUGEST
            FROM SOC_STOCK_OPNAME_UNREG_ASSETS A
                 INNER JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
           WHERE A.asset_id NOT IN (SELECT asset_id
                                      FROM soc_registration_dtl ad
                                           INNER JOIN soc_registration_hdr ar
                                              ON ar.registration_id =
                                                    ad.registration_id
                                     WHERE     ar.branch_id = A.branch_id
                                           AND ar.status_code IN ('ASSET_REGISTRATION_APPROVED',
                                                                  'ASSET_REGISTRATION_INPROCESS')))A
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
   and A.asset_id is null
  </select>
  
  <select id="getSOResultByAssetId" parameterType="java.lang.Long" resultMap="detailAssets">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT STOCK_OPNAME_DTL_ID,
       L_RESULT.description SO_RESULT,
       L_SUGEST.description SO_SUGEST,
       L_HO_SUGEST.description SO_HO_SUGEST
  FROM SOC_STOCK_OPNAME_DTL SD
       INNER JOIN SOC_STOCK_OPNAME_HDR HD
          ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
             AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_RESULT
          ON L_RESULT.DETAIL_CODE = SD.OPNAME_RESULT_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
          ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_HO_SUGEST
          ON L_HO_SUGEST.DETAIL_CODE = SD.OPNAME_HO_SUGEST_CODE
   WHERE #{assetId,jdbcType=DECIMAL} = SD.ASSET_ID and rownum = 1
   UNION ALL
   SELECT STOCK_OPNAME_UNREG_ASSET_ID STOCK_OPNAME_DTL_ID,
       L_RESULT.description SO_RESULT,
       L_SUGEST.description SO_SUGEST,
       L_HO_SUGEST.description SO_HO_SUGEST
  FROM SOC_STOCK_OPNAME_UNREG_ASSETS SD
       INNER JOIN SOC_STOCK_OPNAME_HDR HD
          ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
             AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_RESULT
          ON L_RESULT.DETAIL_CODE = SD.OPNAME_RESULT_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
          ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_HO_SUGEST
          ON L_HO_SUGEST.DETAIL_CODE = SD.OPNAME_HO_SUGEST_CODE
   WHERE #{assetId,jdbcType=DECIMAL} = SD.ASSET_ID and rownum = 1
  </select>
</mapper>