<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="co.id.fifgroup.ssoa.finder.StockOpnameFinder">
	<resultMap id="BaseResultMap" type="co.id.fifgroup.ssoa.dto.StockOpnameDTO">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Feb 27 
			20:51:34 ICT 2013. -->
		<id column="STOCK_OPNAME_ID" jdbcType="DECIMAL" property="id" />
	    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
	    <result column="START_DATE" jdbcType="DATE" property="startDate" />
	    <result column="END_DATE" jdbcType="DATE" property="endDate" />
	    <result column="SO_PERIOD_DTL_ID" jdbcType="VARCHAR" property="soPeriodDtlId" />
	    <result column="BRANCH_ID" jdbcType="DECIMAL" property="branchId" />
	    <result column="BRANCH_NAME" jdbcType="VARCHAR" property="branchName" />
	    <result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
	    <result column="STATUS_ID" jdbcType="DECIMAL" property="statusId" />
	    <result column="STATUS_CODE" jdbcType="VARCHAR" property="statusCode" />
	    <result column="STATUS" jdbcType="VARCHAR" property="status" />
	    <result column="REPORT_STATUS_ID" jdbcType="DECIMAL" property="reportStatusId" />
	    <result column="REPORT_STATUS_CODE" jdbcType="VARCHAR" property="reportStatusCode" />
	    <result column="REPORT_STATUS" jdbcType="VARCHAR" property="reportStatus" />
	    <result column="REPORT_NO" jdbcType="VARCHAR" property="reportNo" />
	    <result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
	    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
	    <result column="LAST_UPDATE_BY" jdbcType="DECIMAL" property="lastUpdateBy" />
	    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
	    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
	    <result column="NUMBER_OF_ASSETS_REG" jdbcType="DECIMAL" property="numberOfAssetReg" />
	    <result column="NUMBER_OF_ASSETS_UNREG" jdbcType="DECIMAL" property="numberOfAssetUnReg" />
	    <result column="NUMBER_OF_PROCESS_ASSETS_REG" jdbcType="DECIMAL" property="numberOfProcessAssetReg" />
	    <result column="NUMBER_OF_PROCESS_ASSETS_UNREG" jdbcType="DECIMAL" property="numberOfProcessAssetUnReg" />
	    <result column="NUMBER_OF_UNPROCESS_ASSETS_REG" jdbcType="DECIMAL" property="numberOfUnProcessAssetReg" />
	    <result column="NUMBER_OF_UNPROCESS_UNREG" jdbcType="DECIMAL" property="numberOfUnProcessAssetUnReg" />
	    <result column="SO_RESULT_FOUND_GOOD_USED" jdbcType="DECIMAL" property="SoResultFoundGoodUsed" />
	    <result column="SO_RESULT_FOUND_GOOD_NOT_USED" jdbcType="DECIMAL" property="SoResultFoundGoodNotUsed" />
	    <result column="SO_RESULT_FOUND_BROKEN" jdbcType="DECIMAL" property="SoResultFoundBroken" />
	    <result column="SO_RESULT_NOT_FOUND" jdbcType="DECIMAL" property="SoResultNotFound" />
	    <result column="AVM_TRX_ID" jdbcType="DECIMAL" property="avmTrxIdString" />
	    
	</resultMap>
	
	<sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="orderCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>

	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample">
		
		SELECT DISTINCT
		STOCK_OPNAME_ID, DESCRIPTION,START_DATE,END_DATE,BRANCH_ID,(case when BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = BRANCH_ID and rownum = 1) end )BRANCH_NAME,HD.COMPANY_ID,SO_PERIOD_DTL_ID,
		STATUS_ID,STATUS_CODE,(select DESCRIPTION from BSE_LOOKUP_DEPENDENTS where LOOKUP_ID = STATUS_ID and DETAIL_CODE = STATUS_CODE) status,
		(SELECT STATUS_ID
            FROM (  SELECT stock_opname_id, STATUS_ID
                      FROM SOC_STOCK_OPNAME_REPORTING
                  ORDER BY stock_opname_reporting_id DESC)
           WHERE stock_opname_id = hd.stock_opname_id AND ROWNUM = 1)
            REPORT_STATUS_ID,
         (SELECT STATUS_CODE
            FROM (  SELECT stock_opname_id, STATUS_CODE
                      FROM SOC_STOCK_OPNAME_REPORTING
                  ORDER BY stock_opname_reporting_id DESC)
           WHERE stock_opname_id = hd.stock_opname_id AND ROWNUM = 1)
            REPORT_STATUS_CODE,
         (SELECT AVM_TRX_ID
            FROM (  SELECT stock_opname_id, AVM_TRX_ID
                      FROM SOC_STOCK_OPNAME_REPORTING
                  ORDER BY stock_opname_reporting_id DESC)
           WHERE stock_opname_id = hd.stock_opname_id AND ROWNUM = 1)
            AVM_TRX_ID,
          (SELECT REPORT_NO
            FROM (  SELECT stock_opname_id, REPORT_NO
                      FROM SOC_STOCK_OPNAME_REPORTING
                  ORDER BY stock_opname_reporting_id DESC)
           WHERE stock_opname_id = hd.stock_opname_id AND ROWNUM = 1)
            REPORT_NO,
        HD.CREATED_BY,
		HD.CREATION_DATE,
		HD.LAST_UPDATE_DATE,
		HD.LAST_UPDATE_BY,
		(SELECT CONCAT(concat(PEA.EMPLOYEE_NUMBER,'-'),PEA.FULL_NAME) FROM pea_personal_informations PEA 
                        WHERE ROWNUM = 1 AND PEA.EMPLOYEE_NUMBER = U.USER_NAME) AS USER_NAME,
		(Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id)  NUMBER_OF_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id
        )  NUMBER_OF_ASSETS_UNREG,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_GOOD_USED')  SO_RESULT_FOUND_GOOD_USED,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_GOOD_NOT_USED')  SO_RESULT_FOUND_GOOD_NOT_USED,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_FOUND_BROKEN')  SO_RESULT_FOUND_BROKEN,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and opname_result_code = 'SO_RESULT_NOT_FOUND')  SO_RESULT_NOT_FOUND,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and sod.opname_result_code is not null ) NUMBER_OF_PROCESS_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id and sou.opname_result_code is not null and sou.opname_sugest_code is not null
        ) NUMBER_OF_PROCESS_ASSETS_UNREG,
        (Select count(1) from SOC_STOCK_OPNAME_DTL sod where sod.stock_opname_id = hd.stock_opname_id and (sod.opname_result_code is null))NUMBER_OF_UNPROCESS_ASSETS_REG,
        (Select count(1) from SOC_STOCK_OPNAME_UNREG_ASSETS sou where sou.stock_opname_id = hd.stock_opname_id and (sou.opname_result_code is null or sou.opname_sugest_code is null)
        ) NUMBER_OF_UNPROCESS_UNREG
		FROM
		SOC_STOCK_OPNAME_HDR HD
		LEFT JOIN SAM_USERS U ON U.USER_ID =
		HD.LAST_UPDATE_BY
		INNER JOIN PEA_PERSONAL_INFORMATIONS PEA ON PEA.PERSON_ID = U.PERSON_ID
		<if test="_parameter != null">
      		<include refid="Example_Where_Clause" />
    	</if>

		<if test="orderByClause != null">
             order by ${orderByClause}
    	</if>
		
	</select>

	<select id="countByExample" resultType="int"
		parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample">
		SELECT count(*) AS TOTAL
		FROM SOC_STOCK_OPNAME_HDR HD
		LEFT JOIN SAM_USERS U ON U.USER_ID = HD.LAST_UPDATE_BY
		<if test="_parameter != null">
      		<include refid="Example_Where_Clause" />
    	</if>
		ORDER BY HD.LAST_UPDATE_DATE DESC
	</select>

	<resultMap id="DetailMap"
		type="co.id.fifgroup.ssoa.dto.StockOpnameDetailDTO">
		<id column="STOCK_OPNAME_ID" property="stockOpnameDetail.stockOpnameId"
			jdbcType="DECIMAL" />
		<result column="ASSET_NO" property="parameterDetail.assetNo"
			jdbcType="VARCHAR" />
		<result column="OPNAME_RESULT" property="parameterDetail.opnameResult"
			jdbcType="VARCHAR" />
	</resultMap>

	

</mapper>