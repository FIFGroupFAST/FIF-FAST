<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="co.id.fifgroup.ssoa.dao.RetirementDetailMapper">
  <resultMap id="BaseResultMap" type="co.id.fifgroup.ssoa.dto.RetirementDetailDTO">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. This element was generated on Wed Feb 27 
			20:51:34 ICT 2013. -->
		<id column="RETIREMENT_DTL_ID" jdbcType="DECIMAL" property="id" />
		<result column="RETIREMENT_ID" jdbcType="DECIMAL" property="retirementId" />
	    <result column="STOCK_OPNAME_DTL_ID" jdbcType="DECIMAL" property="stockOpnameDtlId" />
	    <result column="ASSET_ID" jdbcType="DECIMAL" property="assetId" />
	    
	    <result column="ASSET_NUMBER" jdbcType="DECIMAL" property="assetNumber" />
		<result column="TAG_NUMBER" jdbcType="DECIMAL" property="tagNumber" />
		<result column="SERIAL_NUMBER" jdbcType="VARCHAR" property="serialNumber" />
		<result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
		<result column="CATEGORY_ID" jdbcType="DECIMAL" property="categoryId" />
		<result column="CATEGORY_NAME" jdbcType="VARCHAR" property="categoryName" />
		<result column="ACCOUNT_CODE" jdbcType="VARCHAR" property="accountCode" />
		<result column="COMPANY_ID" jdbcType="DECIMAL" property="companyId" />
		<result column="BRANCH_ID" jdbcType="VARCHAR" property="branchId" />
		<result column="BRANCH_CODE" jdbcType="VARCHAR" property="branchCode" />
		<result column="BRANCH_NAME" jdbcType="VARCHAR" property="branchName" />
		<result column="LOCATION_ID" jdbcType="VARCHAR" property="locationId" />
		<result column="LOCATION_CODE" jdbcType="VARCHAR" property="locationCode" />
		<result column="LOCATION_NAME" jdbcType="VARCHAR" property="locationName" />
		<result column="POSITION" jdbcType="VARCHAR" property="position" />
		
		<result column="DATE_PLACED_IN_SERVICE" jdbcType="DATE" property="datePlacedInService" />
		<result column="LIFE_IN_MONTHS" jdbcType="DECIMAL" property="lifeInMonths" />
		
		<result column="ORIGINAL_COST" jdbcType="DECIMAL" property="originalCost" />
		<result column="UNREVALUED_COST" jdbcType="DECIMAL" property="unrevaluedCost" />
		<result column="BOOK_TYPE_CODE" jdbcType="VARCHAR" property="bookTypeCode" />
		<result column="ASSET_TYPE" jdbcType="VARCHAR" property="assetType" />
		<result column="SO_RESULT" jdbcType="VARCHAR" property="stockOpnameResult" />
		<result column="SO_SUGEST" jdbcType="VARCHAR" property="stockOpnameSugest" />
		<result column="SO_HO_SUGEST" jdbcType="VARCHAR" property="stockOpnameHoSugest" />
		
	    <result column="CREATED_BY" jdbcType="DECIMAL" property="createdBy" />
	    <result column="CREATION_DATE" jdbcType="TIMESTAMP" property="creationDate" />
	    <result column="LAST_UPDATE_BY" jdbcType="DECIMAL" property="lastUpdateBy" />
	    <result column="LAST_UPDATE_DATE" jdbcType="TIMESTAMP" property="lastUpdateDate" />
	    <result column="USER_NAME" jdbcType="VARCHAR" property="userName" />
	    
	    
	</resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    RETIREMENT_DTL_ID, RETIREMENT_ID,
    STOCK_OPNAME_DTL_ID,
    HD.ASSET_ID,
    HD.CREATED_BY, HD.CREATION_DATE, HD.LAST_UPDATE_BY, HD.LAST_UPDATE_DATE, ACCOUNT_CODE 
  </sql>
  <resultMap type="co.id.fifgroup.core.ui.lookup.KeyValue" id="BaseResultMapKeyValue">
		<result column="KEY" property="key" javaType="java.lang.Object"/>
		<result column="VALUE" property="value" javaType="java.lang.Object"/>
		<result column="DESCRIPTION" property="description" javaType="java.lang.Object"/>
	</resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  
  <select id="selectByExample" parameterType="co.id.fifgroup.ssoa.domain.StockOpnameExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select
    <if test="distinct">
      distinct
    </if>
    'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_RETIREMENT_DTL HD
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  
  <select id="getDetailIdForImages" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select distinct 
    	RETIREMENT_DTL_ID
    from SOC_RETIREMENT_DTL
    where RETIREMENT_ID = #{id,jdbcType=DECIMAL} and asset_id= #{assetId,jdbcType=DECIMAL}
  </select>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_RETIREMENT_DTL HD
    left join SOC_ASSETS A on HD.asset_id = A.asset_id
    left join SOC_EBS_CATEGORIES C on A.category_id = C.category_id
    left join SOC_ACCOUNT AC on C.segment1 = AC.ASSET_CATEGORIES
    where RETIREMENT_DTL_ID = #{id,jdbcType=DECIMAL}
  </select>
  <select id="selectByHeaderKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    select 'false' as QUERYID,
    <include refid="Base_Column_List" />
    from SOC_RETIREMENT_DTL HD
    left join SOC_ASSETS A on HD.asset_id = A.asset_id
    left join SOC_EBS_CATEGORIES C on A.category_id = C.category_id
    left join SOC_ACCOUNT AC on C.segment1 = AC.ASSET_CATEGORIES
    where RETIREMENT_ID = #{id,jdbcType=DECIMAL}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    delete from SOC_RETIREMENT_DTL 
    where RETIREMENT_DTL_ID = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Long">
      select SOC_RETIREMENT_DTL_S.nextVal from dual
    </selectKey>
    insert into SOC_RETIREMENT_DTL (RETIREMENT_DTL_ID, RETIREMENT_ID, STOCK_OPNAME_DTL_ID, ASSET_ID,
      CREATED_BY, CREATION_DATE, LAST_UPDATE_BY, 
      LAST_UPDATE_DATE)
    values (#{id,jdbcType=DECIMAL}, #{retirementId,jdbcType=DECIMAL},#{stockOpnameDtlId,jdbcType=DECIMAL},#{assetId,jdbcType=DATE},
      #{createdBy,jdbcType=DECIMAL}, #{creationDate,jdbcType=TIMESTAMP}, #{lastUpdateBy,jdbcType=DECIMAL}, 
      #{lastUpdateDate,jdbcType=TIMESTAMP})
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="co.id.fifgroup.ssoa.domain.StockOpname">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    update SOC_RETIREMENT_DTL
    set RETIREMENT_ID = #{retirementId,jdbcType=DECIMAL},
	    STOCK_OPNAME_DTL_ID = #{stockOpnameDtlId,jdbcType=DECIMAL},
	    ASSET_ID = #{assetId,jdbcType=DECIMAL},
      LAST_UPDATE_BY = #{lastUpdateBy,jdbcType=DECIMAL},
      LAST_UPDATE_DATE = #{lastUpdateDate,jdbcType=TIMESTAMP}
    where RETIREMENT_DTL_ID = #{id,jdbcType=VARCHAR}
  </update>
  
  <select id="selectAssetSODtlByCriteria" resultMap="BaseResultMap"
		parameterType="co.id.fifgroup.ssoa.domain.RetirementDetailExample">
		SELECT * FROM(
		SELECT DISTINCT
	        A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.ASSET_TYPE_CODE,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_CODE from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_CODE,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG,
            (SELECT L_SUGEST.description SO_SUGEST
                    FROM SOC_STOCK_OPNAME_DTL SD
                         INNER JOIN SOC_STOCK_OPNAME_HDR HD
                            ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
                               AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                         LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
                            ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
                   WHERE     A.ASSET_ID = SD.ASSET_ID
                         AND hd.branch_id = A.branch_id
                         AND hd.company_id = A.company_id
                         AND ROWNUM = 1)SO_SUGEST
         FROM SOC_ASSETS A
	        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
	        WHERE A.ASSET_ID NOT IN (select ASSET_ID from SOC_RETIREMENT_DTL d INNER JOIN SOC_RETIREMENT_HDR h on h.retirement_id = d.retirement_id where  (retirement_type_code in ('RETIREMENT_TYPE_GRANT','RETIREMENT_TYPE_SELL')  OR (status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' and status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED')) and (retirement_type_code not in ('RETIREMENT_TYPE_GRANT','RETIREMENT_TYPE_SELL') OR (bast_status_code is null OR (bast_status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' and bast_status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED'))))
	     /*UNION ALL
	     SELECT DISTINCT
            A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.ASSET_TYPE_CODE,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            SO.BRANCH_ID,
            (case when SO.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = SO.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when SO.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = SO.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_CODE from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_CODE,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when A.ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG
        FROM SOC_ASSETS A
        INNER JOIN SOC_STOCK_OPNAME_UNREG_ASSETS UA on A.ASSET_ID = UA.ASSET_ID 
        INNER JOIN SOC_STOCK_OPNAME_HDR SO on SO.Stock_opname_id = UA.stock_opname_id
        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY   
        WHERE SO.STATUS_CODE &lt;&gt; 'SO_STATUS_CLOSED'*/
        ) A
 		 <if test="_parameter != null">
              <include refid="Example_Where_Clause" />
         </if>
         and A.asset_number is not null
		<if test="orderByClause != null">
             order by ${orderByClause}
    	</if>
	</select>
	
	
	<select id="selectAssetSODtl" resultMap="BaseResultMap"
		parameterType="co.id.fifgroup.ssoa.domain.RetirementDetailExample">
		SELECT * FROM(
		SELECT DISTINCT
	        A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_CODE from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_CODE,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG
         FROM SOC_ASSETS A
	        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
	     UNION ALL
	     SELECT DISTINCT
            A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_CODE from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_CODE,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when A.ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG
        FROM SOC_ASSETS A
        INNER JOIN SOC_STOCK_OPNAME_UNREG_ASSETS UA on A.ASSET_ID = UA.ASSET_ID 
        INNER JOIN SOC_STOCK_OPNAME_HDR SO on SO.Stock_opname_id = UA.stock_opname_id
        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY   
        WHERE SO.STATUS_CODE &lt;&gt; 'SO_STATUS_CLOSED'
        )A
 		 <if test="_parameter != null">
              <include refid="Example_Where_Clause" />
         </if>
		ORDER BY
		 A.BRANCH_ID,
		 A.ASSET_NUMBER,
		 A.DESCRIPTION,
		 A.LAST_UPDATE_DATE ASC
	</select>
	
	<select id="countAssetSODtl" parameterType="co.id.fifgroup.ssoa.domain.RetirementDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT count(1) FROM(
		SELECT DISTINCT
	        A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG
         FROM SOC_ASSETS A
	        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
	     UNION ALL
	     SELECT DISTINCT
            A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select SEGMENT1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when A.ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG
        FROM SOC_ASSETS A
        INNER JOIN SOC_STOCK_OPNAME_UNREG_ASSETS UA on A.ASSET_ID = UA.ASSET_ID 
        INNER JOIN SOC_STOCK_OPNAME_HDR SO on SO.Stock_opname_id = UA.stock_opname_id
        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY   
        WHERE SO.STATUS_CODE &lt;&gt; 'SO_STATUS_CLOSED'
        )A
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
	
	<select id="countAssetSODtlByCriteria" parameterType="co.id.fifgroup.ssoa.domain.RetirementDetailExample" resultType="java.lang.Integer">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT count(1) FROM(
		SELECT DISTINCT
	        A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select segment1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            A.BRANCH_ID,
            (case when A.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when A.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = A.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
            A.RETIRED_FLAG,
            (SELECT L_SUGEST.description SO_SUGEST
                    FROM SOC_STOCK_OPNAME_DTL SD
                         INNER JOIN SOC_STOCK_OPNAME_HDR HD
                            ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
                               AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
                         LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
                            ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
                   WHERE     A.ASSET_ID = SD.ASSET_ID
                         AND hd.branch_id = A.branch_id
                         AND hd.company_id = A.company_id
                         AND ROWNUM = 1)SO_SUGEST
         FROM SOC_ASSETS A
	        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY
	        WHERE A.ASSET_ID NOT IN (select ASSET_ID from SOC_RETIREMENT_DTL d INNER JOIN SOC_RETIREMENT_HDR h on h.retirement_id = d.retirement_id where (bast_status_code is not null OR (status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' and status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED')) and (bast_status_code is null OR (bast_status_code &lt;&gt; 'RETIREMENT_STATUS_APPROVED' and bast_status_code &lt;&gt; 'RETIREMENT_STATUS_REJECTED')))
	     /*UNION ALL
	     SELECT DISTINCT
            A.ASSET_ID,
            A.EBS_ASSET_ID,
            A.ASSET_NUMBER,
            A.TAG_NUMBER,
            A.SERIAL_NUMBER,
            A.DESCRIPTION,
            A.CATEGORY_ID,
            (select segment1 from SOC_EBS_CATEGORIES where category_id = A.CATEGORY_ID and rownum = 1) CATEGORY_NAME,
            A.COMPANY_ID,
            SO.BRANCH_ID,
            (case when SO.BRANCH_ID = -1 then 'HEADOFFICE' else (SELECT SUBSTR (ORGANIZATION_CODE, -5) as branch_code from WOS_ORGANIZATIONS where ORGANIZATION_ID = SO.BRANCH_ID and rownum = 1) end )BRANCH_CODE,
		    (case when SO.BRANCH_ID = -1 then 'Head Office' else (SELECT ORGANIZATION_NAME from WOS_ORGANIZATIONS where ORGANIZATION_ID = SO.BRANCH_ID and rownum = 1) end )BRANCH_NAME,
            A.LOCATION_ID,
            (select LOCATION_NAME from WOS_LOCATIONS where location_id = A.LOCATION_ID and rownum = 1) LOCATION_NAME,
            A.POSITION,
            A.DATE_PLACED_IN_SERVICE,
            A.LIFE_IN_MONTHS,
            A.ORIGINAL_COST,
            A.UNREVALUED_COST,
            A.BOOK_TYPE_CODE,
            A.LAST_PRINTED_DATE,
            A.PRINTED_COUNT,
            A.CREATED_BY, 
            A.CREATION_DATE, 
            A.LAST_UPDATE_BY, 
            A.LAST_UPDATE_DATE,
            (case when A.ORIGINAL_COST &lt; CAST ((select value from BSE_GLOBAL_SETTINGS where code = 'MAX_ORIGINAL_COST_FOR_LVA')as number) then 'LVA' else 'AST' end ) ASSET_TYPE,
        	A.RETIRED_FLAG
        FROM SOC_ASSETS A
        INNER JOIN SOC_STOCK_OPNAME_UNREG_ASSETS UA on A.ASSET_ID = UA.ASSET_ID 
        INNER JOIN SOC_STOCK_OPNAME_HDR SO on SO.Stock_opname_id = UA.stock_opname_id
        LEFT JOIN SAM_USERS U ON U.USER_ID = A.LAST_UPDATE_BY   
        WHERE SO.STATUS_CODE &lt;&gt; 'SO_STATUS_CLOSED'*/)A
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    and A.asset_number is not null
  </select>
  
  <select id="getSOResultByAssetId" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    SELECT STOCK_OPNAME_DTL_ID,
       L_RESULT.description SO_RESULT,
       L_SUGEST.description SO_SUGEST,
       L_HO_SUGEST.description SO_HO_SUGEST
  FROM SOC_STOCK_OPNAME_DTL SD
       INNER JOIN SOC_STOCK_OPNAME_HDR HD
          ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
             AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_RESULT
          ON L_RESULT.DETAIL_CODE = SD.OPNAME_RESULT_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
          ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_HO_SUGEST
          ON L_HO_SUGEST.DETAIL_CODE = SD.OPNAME_HO_SUGEST_CODE
   WHERE #{assetId,jdbcType=DECIMAL} = SD.ASSET_ID and rownum = 1
   UNION ALL
   SELECT STOCK_OPNAME_UNREG_ASSET_ID STOCK_OPNAME_DTL_ID,
       L_RESULT.description SO_RESULT,
       L_SUGEST.description SO_SUGEST,
       L_HO_SUGEST.description SO_HO_SUGEST
  FROM SOC_STOCK_OPNAME_UNREG_ASSETS SD
       INNER JOIN SOC_STOCK_OPNAME_HDR HD
          ON     SD.STOCK_OPNAME_ID = HD.STOCK_OPNAME_ID
             AND HD.STATUS_CODE = 'SO_STATUS_APPROVED'
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_RESULT
          ON L_RESULT.DETAIL_CODE = SD.OPNAME_RESULT_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_SUGEST
          ON L_SUGEST.DETAIL_CODE = SD.OPNAME_SUGEST_CODE
       LEFT JOIN BSE_LOOKUP_DEPENDENTS L_HO_SUGEST
          ON L_HO_SUGEST.DETAIL_CODE = SD.OPNAME_HO_SUGEST_CODE
   WHERE #{assetId,jdbcType=DECIMAL} = SD.ASSET_ID and rownum = 1
  </select>
  
  <update id="updateRvNumber" parameterType="co.id.fifgroup.ssoa.dto.RetirementDTO">
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue Mar 19 22:59:29 ICT 2013.
    -->
    UPDATE SOC_RETIREMENT_DTL
    SET RV_NUMBER = #{rvNumber,jdbcType=VARCHAR}
    where RETIREMENT_ID = #{id,jdbcType=DECIMAL}
    and asset_id in (select rd.asset_id from SOC_RETIREMENT_DTL rd inner join soc_assets a on rd.asset_id = a.asset_id 
                     inner join SOC_EBS_CATEGORIES c on c.category_id = a.category_id 
                     inner join SOC_ACCOUNT sa on sa.asset_categories = c.segment1 
                     where sa.account_code = #{accountCode,jdbcType=VARCHAR} and RETIREMENT_ID = #{id,jdbcType=DECIMAL})
  </update>
</mapper>