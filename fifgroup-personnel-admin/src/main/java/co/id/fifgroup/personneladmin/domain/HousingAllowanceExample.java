package co.id.fifgroup.personneladmin.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class HousingAllowanceExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public HousingAllowanceExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andHousingAllowanceIdIsNull() {
            addCriterion("HOUSING_ALLOWANCE_ID is null");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdIsNotNull() {
            addCriterion("HOUSING_ALLOWANCE_ID is not null");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdEqualTo(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID =", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdNotEqualTo(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID <>", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdGreaterThan(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID >", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdGreaterThanOrEqualTo(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID >=", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdLessThan(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID <", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdLessThanOrEqualTo(Long value) {
            addCriterion("HOUSING_ALLOWANCE_ID <=", value, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdIn(List<Long> values) {
            addCriterion("HOUSING_ALLOWANCE_ID in", values, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdNotIn(List<Long> values) {
            addCriterion("HOUSING_ALLOWANCE_ID not in", values, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdBetween(Long value1, Long value2) {
            addCriterion("HOUSING_ALLOWANCE_ID between", value1, value2, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andHousingAllowanceIdNotBetween(Long value1, Long value2) {
            addCriterion("HOUSING_ALLOWANCE_ID not between", value1, value2, "housingAllowanceId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNull() {
            addCriterion("PERSON_ID is null");
            return (Criteria) this;
        }

        public Criteria andPersonIdIsNotNull() {
            addCriterion("PERSON_ID is not null");
            return (Criteria) this;
        }

        public Criteria andPersonIdEqualTo(Long value) {
            addCriterion("PERSON_ID =", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotEqualTo(Long value) {
            addCriterion("PERSON_ID <>", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThan(Long value) {
            addCriterion("PERSON_ID >", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdGreaterThanOrEqualTo(Long value) {
            addCriterion("PERSON_ID >=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThan(Long value) {
            addCriterion("PERSON_ID <", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdLessThanOrEqualTo(Long value) {
            addCriterion("PERSON_ID <=", value, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdIn(List<Long> values) {
            addCriterion("PERSON_ID in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotIn(List<Long> values) {
            addCriterion("PERSON_ID not in", values, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdBetween(Long value1, Long value2) {
            addCriterion("PERSON_ID between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andPersonIdNotBetween(Long value1, Long value2) {
            addCriterion("PERSON_ID not between", value1, value2, "personId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNull() {
            addCriterion("COMPANY_ID is null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIsNotNull() {
            addCriterion("COMPANY_ID is not null");
            return (Criteria) this;
        }

        public Criteria andCompanyIdEqualTo(Long value) {
            addCriterion("COMPANY_ID =", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotEqualTo(Long value) {
            addCriterion("COMPANY_ID <>", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThan(Long value) {
            addCriterion("COMPANY_ID >", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdGreaterThanOrEqualTo(Long value) {
            addCriterion("COMPANY_ID >=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThan(Long value) {
            addCriterion("COMPANY_ID <", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdLessThanOrEqualTo(Long value) {
            addCriterion("COMPANY_ID <=", value, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdIn(List<Long> values) {
            addCriterion("COMPANY_ID in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotIn(List<Long> values) {
            addCriterion("COMPANY_ID not in", values, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdBetween(Long value1, Long value2) {
            addCriterion("COMPANY_ID between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andCompanyIdNotBetween(Long value1, Long value2) {
            addCriterion("COMPANY_ID not between", value1, value2, "companyId");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIsNull() {
            addCriterion("EFFECTIVE_START_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIsNotNull() {
            addCriterion("EFFECTIVE_START_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateEqualTo(Date value) {
            addCriterion("EFFECTIVE_START_DATE =", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotEqualTo(Date value) {
            addCriterion("EFFECTIVE_START_DATE <>", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateGreaterThan(Date value) {
            addCriterion("EFFECTIVE_START_DATE >", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateGreaterThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_START_DATE >=", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateLessThan(Date value) {
            addCriterion("EFFECTIVE_START_DATE <", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateLessThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_START_DATE <=", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIn(List<Date> values) {
            addCriterion("EFFECTIVE_START_DATE in", values, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotIn(List<Date> values) {
            addCriterion("EFFECTIVE_START_DATE not in", values, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_START_DATE between", value1, value2, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_START_DATE not between", value1, value2, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateIsNull() {
            addCriterion("EFFECTIVE_END_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateIsNotNull() {
            addCriterion("EFFECTIVE_END_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateEqualTo(Date value) {
            addCriterion("EFFECTIVE_END_DATE =", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateNotEqualTo(Date value) {
            addCriterion("EFFECTIVE_END_DATE <>", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateGreaterThan(Date value) {
            addCriterion("EFFECTIVE_END_DATE >", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateGreaterThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_END_DATE >=", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateLessThan(Date value) {
            addCriterion("EFFECTIVE_END_DATE <", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateLessThanOrEqualTo(Date value) {
            addCriterion("EFFECTIVE_END_DATE <=", value, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateIn(List<Date> values) {
            addCriterion("EFFECTIVE_END_DATE in", values, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateNotIn(List<Date> values) {
            addCriterion("EFFECTIVE_END_DATE not in", values, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_END_DATE between", value1, value2, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveEndDateNotBetween(Date value1, Date value2) {
            addCriterion("EFFECTIVE_END_DATE not between", value1, value2, "effectiveEndDate");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceIsNull() {
            addCriterion("HOUSE_ALLOWANCE is null");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceIsNotNull() {
            addCriterion("HOUSE_ALLOWANCE is not null");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceEqualTo(String value) {
            addCriterion("HOUSE_ALLOWANCE =", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceNotEqualTo(String value) {
            addCriterion("HOUSE_ALLOWANCE <>", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceGreaterThan(String value) {
            addCriterion("HOUSE_ALLOWANCE >", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceGreaterThanOrEqualTo(String value) {
            addCriterion("HOUSE_ALLOWANCE >=", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceLessThan(String value) {
            addCriterion("HOUSE_ALLOWANCE <", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceLessThanOrEqualTo(String value) {
            addCriterion("HOUSE_ALLOWANCE <=", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceLike(String value) {
            addCriterion("HOUSE_ALLOWANCE like", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceNotLike(String value) {
            addCriterion("HOUSE_ALLOWANCE not like", value, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceIn(List<String> values) {
            addCriterion("HOUSE_ALLOWANCE in", values, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceNotIn(List<String> values) {
            addCriterion("HOUSE_ALLOWANCE not in", values, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceBetween(String value1, String value2) {
            addCriterion("HOUSE_ALLOWANCE between", value1, value2, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceNotBetween(String value1, String value2) {
            addCriterion("HOUSE_ALLOWANCE not between", value1, value2, "houseAllowance");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNull() {
            addCriterion("CREATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andCreatedByIsNotNull() {
            addCriterion("CREATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andCreatedByEqualTo(Long value) {
            addCriterion("CREATED_BY =", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotEqualTo(Long value) {
            addCriterion("CREATED_BY <>", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThan(Long value) {
            addCriterion("CREATED_BY >", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY >=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThan(Long value) {
            addCriterion("CREATED_BY <", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByLessThanOrEqualTo(Long value) {
            addCriterion("CREATED_BY <=", value, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByIn(List<Long> values) {
            addCriterion("CREATED_BY in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotIn(List<Long> values) {
            addCriterion("CREATED_BY not in", values, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreatedByNotBetween(Long value1, Long value2) {
            addCriterion("CREATED_BY not between", value1, value2, "createdBy");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNull() {
            addCriterion("CREATION_DATE is null");
            return (Criteria) this;
        }

        public Criteria andCreationDateIsNotNull() {
            addCriterion("CREATION_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andCreationDateEqualTo(Date value) {
            addCriterion("CREATION_DATE =", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotEqualTo(Date value) {
            addCriterion("CREATION_DATE <>", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThan(Date value) {
            addCriterion("CREATION_DATE >", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateGreaterThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE >=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThan(Date value) {
            addCriterion("CREATION_DATE <", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateLessThanOrEqualTo(Date value) {
            addCriterion("CREATION_DATE <=", value, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateIn(List<Date> values) {
            addCriterion("CREATION_DATE in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotIn(List<Date> values) {
            addCriterion("CREATION_DATE not in", values, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andCreationDateNotBetween(Date value1, Date value2) {
            addCriterion("CREATION_DATE not between", value1, value2, "creationDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNull() {
            addCriterion("LAST_UPDATED_BY is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIsNotNull() {
            addCriterion("LAST_UPDATED_BY is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY =", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <>", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThan(Long value) {
            addCriterion("LAST_UPDATED_BY >", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByGreaterThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY >=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThan(Long value) {
            addCriterion("LAST_UPDATED_BY <", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByLessThanOrEqualTo(Long value) {
            addCriterion("LAST_UPDATED_BY <=", value, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotIn(List<Long> values) {
            addCriterion("LAST_UPDATED_BY not in", values, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdatedByNotBetween(Long value1, Long value2) {
            addCriterion("LAST_UPDATED_BY not between", value1, value2, "lastUpdatedBy");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNull() {
            addCriterion("LAST_UPDATE_DATE is null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIsNotNull() {
            addCriterion("LAST_UPDATE_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE =", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <>", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThan(Date value) {
            addCriterion("LAST_UPDATE_DATE >", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateGreaterThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE >=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThan(Date value) {
            addCriterion("LAST_UPDATE_DATE <", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateLessThanOrEqualTo(Date value) {
            addCriterion("LAST_UPDATE_DATE <=", value, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotIn(List<Date> values) {
            addCriterion("LAST_UPDATE_DATE not in", values, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andLastUpdateDateNotBetween(Date value1, Date value2) {
            addCriterion("LAST_UPDATE_DATE not between", value1, value2, "lastUpdateDate");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedIsNull() {
            addCriterion("IS_LUMPSUM_REQUESTED is null");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedIsNotNull() {
            addCriterion("IS_LUMPSUM_REQUESTED is not null");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedEqualTo(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED =", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedNotEqualTo(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED <>", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedGreaterThan(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED >", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedGreaterThanOrEqualTo(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED >=", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedLessThan(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED <", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedLessThanOrEqualTo(Boolean value) {
            addCriterion("IS_LUMPSUM_REQUESTED <=", value, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedIn(List<Boolean> values) {
            addCriterion("IS_LUMPSUM_REQUESTED in", values, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedNotIn(List<Boolean> values) {
            addCriterion("IS_LUMPSUM_REQUESTED not in", values, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_LUMPSUM_REQUESTED between", value1, value2, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andIsLumpsumRequestedNotBetween(Boolean value1, Boolean value2) {
            addCriterion("IS_LUMPSUM_REQUESTED not between", value1, value2, "isLumpsumRequested");
            return (Criteria) this;
        }

        public Criteria andHouseAllowanceLikeInsensitive(String value) {
            addCriterion("upper(HOUSE_ALLOWANCE) like", value.toUpperCase(), "houseAllowance");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated do_not_delete_during_merge Tue Nov 25 16:59:26 ICT 2014
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_HOUSING_ALLOWANCE
     *
     * @mbggenerated Tue Nov 25 16:59:26 ICT 2014
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}