package co.id.fifgroup.personneladmin.domain;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class AccountInfoStageExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public AccountInfoStageExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andUploadIdIsNull() {
            addCriterion("UPLOAD_ID is null");
            return (Criteria) this;
        }

        public Criteria andUploadIdIsNotNull() {
            addCriterion("UPLOAD_ID is not null");
            return (Criteria) this;
        }

        public Criteria andUploadIdEqualTo(Long value) {
            addCriterion("UPLOAD_ID =", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotEqualTo(Long value) {
            addCriterion("UPLOAD_ID <>", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThan(Long value) {
            addCriterion("UPLOAD_ID >", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdGreaterThanOrEqualTo(Long value) {
            addCriterion("UPLOAD_ID >=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThan(Long value) {
            addCriterion("UPLOAD_ID <", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdLessThanOrEqualTo(Long value) {
            addCriterion("UPLOAD_ID <=", value, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdIn(List<Long> values) {
            addCriterion("UPLOAD_ID in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotIn(List<Long> values) {
            addCriterion("UPLOAD_ID not in", values, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdBetween(Long value1, Long value2) {
            addCriterion("UPLOAD_ID between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andUploadIdNotBetween(Long value1, Long value2) {
            addCriterion("UPLOAD_ID not between", value1, value2, "uploadId");
            return (Criteria) this;
        }

        public Criteria andAccountTypeIsNull() {
            addCriterion("ACCOUNT_TYPE is null");
            return (Criteria) this;
        }

        public Criteria andAccountTypeIsNotNull() {
            addCriterion("ACCOUNT_TYPE is not null");
            return (Criteria) this;
        }

        public Criteria andAccountTypeEqualTo(String value) {
            addCriterion("ACCOUNT_TYPE =", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeNotEqualTo(String value) {
            addCriterion("ACCOUNT_TYPE <>", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeGreaterThan(String value) {
            addCriterion("ACCOUNT_TYPE >", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeGreaterThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_TYPE >=", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeLessThan(String value) {
            addCriterion("ACCOUNT_TYPE <", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeLessThanOrEqualTo(String value) {
            addCriterion("ACCOUNT_TYPE <=", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeLike(String value) {
            addCriterion("ACCOUNT_TYPE like", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeNotLike(String value) {
            addCriterion("ACCOUNT_TYPE not like", value, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeIn(List<String> values) {
            addCriterion("ACCOUNT_TYPE in", values, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeNotIn(List<String> values) {
            addCriterion("ACCOUNT_TYPE not in", values, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeBetween(String value1, String value2) {
            addCriterion("ACCOUNT_TYPE between", value1, value2, "accountType");
            return (Criteria) this;
        }

        public Criteria andAccountTypeNotBetween(String value1, String value2) {
            addCriterion("ACCOUNT_TYPE not between", value1, value2, "accountType");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberIsNull() {
            addCriterion("EMPLOYEE_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberIsNotNull() {
            addCriterion("EMPLOYEE_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberEqualTo(String value) {
            addCriterion("EMPLOYEE_NUMBER =", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberNotEqualTo(String value) {
            addCriterion("EMPLOYEE_NUMBER <>", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberGreaterThan(String value) {
            addCriterion("EMPLOYEE_NUMBER >", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberGreaterThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_NUMBER >=", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberLessThan(String value) {
            addCriterion("EMPLOYEE_NUMBER <", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberLessThanOrEqualTo(String value) {
            addCriterion("EMPLOYEE_NUMBER <=", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberLike(String value) {
            addCriterion("EMPLOYEE_NUMBER like", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberNotLike(String value) {
            addCriterion("EMPLOYEE_NUMBER not like", value, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberIn(List<String> values) {
            addCriterion("EMPLOYEE_NUMBER in", values, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberNotIn(List<String> values) {
            addCriterion("EMPLOYEE_NUMBER not in", values, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_NUMBER between", value1, value2, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberNotBetween(String value1, String value2) {
            addCriterion("EMPLOYEE_NUMBER not between", value1, value2, "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeIsNull() {
            addCriterion("RELATIONSHIP_CODE is null");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeIsNotNull() {
            addCriterion("RELATIONSHIP_CODE is not null");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeEqualTo(String value) {
            addCriterion("RELATIONSHIP_CODE =", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeNotEqualTo(String value) {
            addCriterion("RELATIONSHIP_CODE <>", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeGreaterThan(String value) {
            addCriterion("RELATIONSHIP_CODE >", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeGreaterThanOrEqualTo(String value) {
            addCriterion("RELATIONSHIP_CODE >=", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeLessThan(String value) {
            addCriterion("RELATIONSHIP_CODE <", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeLessThanOrEqualTo(String value) {
            addCriterion("RELATIONSHIP_CODE <=", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeLike(String value) {
            addCriterion("RELATIONSHIP_CODE like", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeNotLike(String value) {
            addCriterion("RELATIONSHIP_CODE not like", value, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeIn(List<String> values) {
            addCriterion("RELATIONSHIP_CODE in", values, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeNotIn(List<String> values) {
            addCriterion("RELATIONSHIP_CODE not in", values, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeBetween(String value1, String value2) {
            addCriterion("RELATIONSHIP_CODE between", value1, value2, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeNotBetween(String value1, String value2) {
            addCriterion("RELATIONSHIP_CODE not between", value1, value2, "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberIsNull() {
            addCriterion("INSURANCE_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberIsNotNull() {
            addCriterion("INSURANCE_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberEqualTo(String value) {
            addCriterion("INSURANCE_NUMBER =", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberNotEqualTo(String value) {
            addCriterion("INSURANCE_NUMBER <>", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberGreaterThan(String value) {
            addCriterion("INSURANCE_NUMBER >", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberGreaterThanOrEqualTo(String value) {
            addCriterion("INSURANCE_NUMBER >=", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberLessThan(String value) {
            addCriterion("INSURANCE_NUMBER <", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberLessThanOrEqualTo(String value) {
            addCriterion("INSURANCE_NUMBER <=", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberLike(String value) {
            addCriterion("INSURANCE_NUMBER like", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberNotLike(String value) {
            addCriterion("INSURANCE_NUMBER not like", value, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberIn(List<String> values) {
            addCriterion("INSURANCE_NUMBER in", values, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberNotIn(List<String> values) {
            addCriterion("INSURANCE_NUMBER not in", values, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberBetween(String value1, String value2) {
            addCriterion("INSURANCE_NUMBER between", value1, value2, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberNotBetween(String value1, String value2) {
            addCriterion("INSURANCE_NUMBER not between", value1, value2, "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberIsNull() {
            addCriterion("DPA_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andDpaNumberIsNotNull() {
            addCriterion("DPA_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andDpaNumberEqualTo(String value) {
            addCriterion("DPA_NUMBER =", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberNotEqualTo(String value) {
            addCriterion("DPA_NUMBER <>", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberGreaterThan(String value) {
            addCriterion("DPA_NUMBER >", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberGreaterThanOrEqualTo(String value) {
            addCriterion("DPA_NUMBER >=", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberLessThan(String value) {
            addCriterion("DPA_NUMBER <", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberLessThanOrEqualTo(String value) {
            addCriterion("DPA_NUMBER <=", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberLike(String value) {
            addCriterion("DPA_NUMBER like", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberNotLike(String value) {
            addCriterion("DPA_NUMBER not like", value, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberIn(List<String> values) {
            addCriterion("DPA_NUMBER in", values, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberNotIn(List<String> values) {
            addCriterion("DPA_NUMBER not in", values, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberBetween(String value1, String value2) {
            addCriterion("DPA_NUMBER between", value1, value2, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberNotBetween(String value1, String value2) {
            addCriterion("DPA_NUMBER not between", value1, value2, "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateIsNull() {
            addCriterion("DPA_JOIN_DATE is null");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateIsNotNull() {
            addCriterion("DPA_JOIN_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateEqualTo(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE =", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE <>", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateGreaterThan(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE >", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE >=", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateLessThan(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE <", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("DPA_JOIN_DATE <=", value, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateIn(List<Date> values) {
            addCriterionForJDBCDate("DPA_JOIN_DATE in", values, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("DPA_JOIN_DATE not in", values, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DPA_JOIN_DATE between", value1, value2, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andDpaJoinDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("DPA_JOIN_DATE not between", value1, value2, "dpaJoinDate");
            return (Criteria) this;
        }

        public Criteria andKpjNumberIsNull() {
            addCriterion("KPJ_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andKpjNumberIsNotNull() {
            addCriterion("KPJ_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andKpjNumberEqualTo(String value) {
            addCriterion("KPJ_NUMBER =", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberNotEqualTo(String value) {
            addCriterion("KPJ_NUMBER <>", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberGreaterThan(String value) {
            addCriterion("KPJ_NUMBER >", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberGreaterThanOrEqualTo(String value) {
            addCriterion("KPJ_NUMBER >=", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberLessThan(String value) {
            addCriterion("KPJ_NUMBER <", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberLessThanOrEqualTo(String value) {
            addCriterion("KPJ_NUMBER <=", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberLike(String value) {
            addCriterion("KPJ_NUMBER like", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberNotLike(String value) {
            addCriterion("KPJ_NUMBER not like", value, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberIn(List<String> values) {
            addCriterion("KPJ_NUMBER in", values, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberNotIn(List<String> values) {
            addCriterion("KPJ_NUMBER not in", values, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberBetween(String value1, String value2) {
            addCriterion("KPJ_NUMBER between", value1, value2, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberNotBetween(String value1, String value2) {
            addCriterion("KPJ_NUMBER not between", value1, value2, "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIsNull() {
            addCriterion("EFFECTIVE_START_DATE is null");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIsNotNull() {
            addCriterion("EFFECTIVE_START_DATE is not null");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateEqualTo(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE =", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotEqualTo(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE <>", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateGreaterThan(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE >", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE >=", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateLessThan(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE <", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE <=", value, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateIn(List<Date> values) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE in", values, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotIn(List<Date> values) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE not in", values, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE between", value1, value2, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andEffectiveStartDateNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("EFFECTIVE_START_DATE not between", value1, value2, "effectiveStartDate");
            return (Criteria) this;
        }

        public Criteria andRowNumberIsNull() {
            addCriterion("ROW_NUMBER is null");
            return (Criteria) this;
        }

        public Criteria andRowNumberIsNotNull() {
            addCriterion("ROW_NUMBER is not null");
            return (Criteria) this;
        }

        public Criteria andRowNumberEqualTo(Long value) {
            addCriterion("ROW_NUMBER =", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotEqualTo(Long value) {
            addCriterion("ROW_NUMBER <>", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberGreaterThan(Long value) {
            addCriterion("ROW_NUMBER >", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberGreaterThanOrEqualTo(Long value) {
            addCriterion("ROW_NUMBER >=", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberLessThan(Long value) {
            addCriterion("ROW_NUMBER <", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberLessThanOrEqualTo(Long value) {
            addCriterion("ROW_NUMBER <=", value, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberIn(List<Long> values) {
            addCriterion("ROW_NUMBER in", values, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotIn(List<Long> values) {
            addCriterion("ROW_NUMBER not in", values, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberBetween(Long value1, Long value2) {
            addCriterion("ROW_NUMBER between", value1, value2, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRowNumberNotBetween(Long value1, Long value2) {
            addCriterion("ROW_NUMBER not between", value1, value2, "rowNumber");
            return (Criteria) this;
        }

        public Criteria andRawDataIsNull() {
            addCriterion("RAW_DATA is null");
            return (Criteria) this;
        }

        public Criteria andRawDataIsNotNull() {
            addCriterion("RAW_DATA is not null");
            return (Criteria) this;
        }

        public Criteria andRawDataEqualTo(String value) {
            addCriterion("RAW_DATA =", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotEqualTo(String value) {
            addCriterion("RAW_DATA <>", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataGreaterThan(String value) {
            addCriterion("RAW_DATA >", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataGreaterThanOrEqualTo(String value) {
            addCriterion("RAW_DATA >=", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLessThan(String value) {
            addCriterion("RAW_DATA <", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLessThanOrEqualTo(String value) {
            addCriterion("RAW_DATA <=", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataLike(String value) {
            addCriterion("RAW_DATA like", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotLike(String value) {
            addCriterion("RAW_DATA not like", value, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataIn(List<String> values) {
            addCriterion("RAW_DATA in", values, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotIn(List<String> values) {
            addCriterion("RAW_DATA not in", values, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataBetween(String value1, String value2) {
            addCriterion("RAW_DATA between", value1, value2, "rawData");
            return (Criteria) this;
        }

        public Criteria andRawDataNotBetween(String value1, String value2) {
            addCriterion("RAW_DATA not between", value1, value2, "rawData");
            return (Criteria) this;
        }

        public Criteria andIsClosedIsNull() {
            addCriterion("IS_CLOSED is null");
            return (Criteria) this;
        }

        public Criteria andIsClosedIsNotNull() {
            addCriterion("IS_CLOSED is not null");
            return (Criteria) this;
        }

        public Criteria andIsClosedEqualTo(boolean value) {
            addCriterion("IS_CLOSED =", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotEqualTo(boolean value) {
            addCriterion("IS_CLOSED <>", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedGreaterThan(boolean value) {
            addCriterion("IS_CLOSED >", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedGreaterThanOrEqualTo(boolean value) {
            addCriterion("IS_CLOSED >=", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedLessThan(boolean value) {
            addCriterion("IS_CLOSED <", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedLessThanOrEqualTo(boolean value) {
            addCriterion("IS_CLOSED <=", value, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedIn(List<Boolean> values) {
            addCriterion("IS_CLOSED in", values, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotIn(List<Boolean> values) {
            addCriterion("IS_CLOSED not in", values, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedBetween(boolean value1, boolean value2) {
            addCriterion("IS_CLOSED between", value1, value2, "isClosed");
            return (Criteria) this;
        }

        public Criteria andIsClosedNotBetween(boolean value1, boolean value2) {
            addCriterion("IS_CLOSED not between", value1, value2, "isClosed");
            return (Criteria) this;
        }

        public Criteria andAccountTypeLikeInsensitive(String value) {
            addCriterion("upper(ACCOUNT_TYPE) like", value.toUpperCase(), "accountType");
            return (Criteria) this;
        }

        public Criteria andEmployeeNumberLikeInsensitive(String value) {
            addCriterion("upper(EMPLOYEE_NUMBER) like", value.toUpperCase(), "employeeNumber");
            return (Criteria) this;
        }

        public Criteria andRelationshipCodeLikeInsensitive(String value) {
            addCriterion("upper(RELATIONSHIP_CODE) like", value.toUpperCase(), "relationshipCode");
            return (Criteria) this;
        }

        public Criteria andInsuranceNumberLikeInsensitive(String value) {
            addCriterion("upper(INSURANCE_NUMBER) like", value.toUpperCase(), "insuranceNumber");
            return (Criteria) this;
        }

        public Criteria andDpaNumberLikeInsensitive(String value) {
            addCriterion("upper(DPA_NUMBER) like", value.toUpperCase(), "dpaNumber");
            return (Criteria) this;
        }

        public Criteria andKpjNumberLikeInsensitive(String value) {
            addCriterion("upper(KPJ_NUMBER) like", value.toUpperCase(), "kpjNumber");
            return (Criteria) this;
        }

        public Criteria andRawDataLikeInsensitive(String value) {
            addCriterion("upper(RAW_DATA) like", value.toUpperCase(), "rawData");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated do_not_delete_during_merge Wed Jul 03 19:55:52 ICT 2013
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table PEA_ACCOUNT_INFO_STG
     *
     * @mbggenerated Wed Jul 03 19:55:52 ICT 2013
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}